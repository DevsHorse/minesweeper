{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/game.js\";\nimport React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      boardWidth: 0,\n      ceilSize: 0,\n      ceils: {},\n      mines: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const newBoardWidth = this.getBoardSize();\n    const minesObject = this.getMines();\n    const ceilsObject = this.getCeils(minesObject);\n\n    for (let ceil of Object.keys(ceilsObject)) {\n      let row = ceilsObject[ceil].row;\n      let col = ceilsObject[ceil].col;\n      let arroundCeils = [];\n      let minesArround = 0;\n      arroundCeils.push(col + 1 + '/' + row);\n      arroundCeils.push(col - 1 + '/' + row);\n      arroundCeils.push(col + '/' + (row + 1));\n      arroundCeils.push(col + '/' + (row - 1));\n      arroundCeils.push(col + 1 + '/' + (row + 1));\n      arroundCeils.push(col + 1 + '/' + (row - 1));\n      arroundCeils.push(col - 1 + '/' + (row + 1));\n      arroundCeils.push(col + 1 + '/' + (row + 1));\n      arroundCeils = arroundCeils.filter(item => {\n        // console.log(this.props.gameDifficult.width + 1)\n        let reg = new RegExp(`[0|${this.props.gameDifficult.width + 1}|${+this.props.gameDifficult.height + 1}]`, 'g');\n\n        if (reg.test(item)) {\n          return;\n        } else {\n          return item;\n        }\n      });\n      arroundCeils.forEach(item => {\n        // console.log(item, ceilsObject[item]);\n        minesArround = ceilsObject[item].mined ? minesArround++ : minesArround;\n      });\n      console.log('mines arround: ', minesArround);\n    }\n\n    console.log('mines: ', Object.keys(minesObject).length); // console.log(ceilsObject);\n  }\n\n  getBoardSize() {\n    let ceilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      ceilSize = 45;\n    } else if (this.props.gameDifficult.width === '30') {\n      ceilSize = 35;\n    }\n\n    return +this.props.gameDifficult.width * ceilSize + this.props.gameDifficult.width * 2;\n  }\n\n  getMines() {\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      }\n\n      ;\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils(minesObject) {\n    let ceilsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n        ceilsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0\n        };\n      }\n    }\n\n    return ceilsObject;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      gameDifficult: this.props.gameDifficult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AsideMenu, {\n      handleGameStatus: this.props.handleGameStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/game.js"],"names":["React","Board","AsideMenu","Game","Component","constructor","props","state","boardWidth","ceilSize","ceils","mines","componentDidMount","gameInit","newBoardWidth","getBoardSize","minesObject","getMines","ceilsObject","getCeils","ceil","Object","keys","row","col","arroundCeils","minesArround","push","filter","item","reg","RegExp","gameDifficult","width","height","test","forEach","mined","console","log","length","i","randomCol","Math","floor","random","randomRow","isMined","id","opened","flagged","minesAround","render","handleGameStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,UAAU,EAAE,CADN;AAENC,MAAAA,QAAQ,EAAE,CAFJ;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,KAAK,EAAE;AAJD,KAJW;AAElB;;AASDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKL,KAAL,CAAWC,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,WAAKK,QAAL;AACD;AACF;;AAEDA,EAAAA,QAAQ,GAAG;AACT,UAAMC,aAAa,GAAG,KAAKC,YAAL,EAAtB;AACA,UAAMC,WAAW,GAAG,KAAKC,QAAL,EAApB;AACA,UAAMC,WAAW,GAAG,KAAKC,QAAL,CAAcH,WAAd,CAApB;;AAGA,SAAK,IAAII,IAAT,IAAiBC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAAjB,EAA2C;AACzC,UAAIK,GAAG,GAAGL,WAAW,CAACE,IAAD,CAAX,CAAkBG,GAA5B;AACA,UAAIC,GAAG,GAAGN,WAAW,CAACE,IAAD,CAAX,CAAkBI,GAA5B;AAEA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,YAAY,GAAG,CAAnB;AAEAD,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAG,GAAG,CAAP,GAAY,GAAZ,GAAmBD,GAArC;AACAE,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAG,GAAG,CAAP,GAAY,GAAZ,GAAmBD,GAArC;AACAE,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAD,GAAQ,GAAR,IAAeD,GAAG,GAAG,CAArB,CAAlB;AACAE,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAD,GAAQ,GAAR,IAAeD,GAAG,GAAG,CAArB,CAAlB;AACAE,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAG,GAAG,CAAP,GAAY,GAAZ,IAAmBD,GAAG,GAAG,CAAzB,CAAlB;AACAE,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAG,GAAG,CAAP,GAAY,GAAZ,IAAmBD,GAAG,GAAG,CAAzB,CAAlB;AACAE,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAG,GAAG,CAAP,GAAY,GAAZ,IAAmBD,GAAG,GAAG,CAAzB,CAAlB;AACAE,MAAAA,YAAY,CAACE,IAAb,CAAmBH,GAAG,GAAG,CAAP,GAAY,GAAZ,IAAmBD,GAAG,GAAG,CAAzB,CAAlB;AAEAE,MAAAA,YAAY,GAAGA,YAAY,CAACG,MAAb,CAAoBC,IAAI,IAAI;AACzC;AACA,YAAIC,GAAG,GAAG,IAAIC,MAAJ,CAAY,MAAK,KAAKzB,KAAL,CAAW0B,aAAX,CAAyBC,KAAzB,GAAiC,CAAE,IAAG,CAAC,KAAK3B,KAAL,CAAW0B,aAAX,CAAyBE,MAA1B,GAAmC,CAAE,GAA5F,EAAgG,GAAhG,CAAV;;AACA,YAAIJ,GAAG,CAACK,IAAJ,CAASN,IAAT,CAAJ,EAAoB;AAClB;AACD,SAFD,MAEO;AACL,iBAAOA,IAAP;AACD;AACF,OARc,CAAf;AAUAJ,MAAAA,YAAY,CAACW,OAAb,CAAqBP,IAAI,IAAI;AAC3B;AACAH,QAAAA,YAAY,GAAGR,WAAW,CAACW,IAAD,CAAX,CAAkBQ,KAAlB,GAA0BX,YAAY,EAAtC,GAA2CA,YAA1D;AACD,OAHD;AAKAY,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bb,YAA/B;AACD;;AAEDY,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBlB,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBwB,MAAhD,EAxCS,CA0CT;AACD;;AAEDzB,EAAAA,YAAY,GAAG;AACb,QAAIN,QAAQ,GAAG,EAAf;;AAEA,QAAI,KAAKH,KAAL,CAAW0B,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AAC3CxB,MAAAA,QAAQ,GAAG,EAAX;AACD,KAFD,MAEQ,IAAI,KAAKH,KAAL,CAAW0B,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AACnDxB,MAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,WAAO,CAAC,KAAKH,KAAL,CAAW0B,aAAX,CAAyBC,KAA1B,GAAkCxB,QAAlC,GAA8C,KAAKH,KAAL,CAAW0B,aAAX,CAAyBC,KAAzB,GAAiC,CAAtF;AACD;;AAEDhB,EAAAA,QAAQ,GAAG;AAET,QAAIN,KAAK,GAAG,CAAZ;;AAEA,QAAI,KAAKL,KAAL,CAAW0B,aAAX,CAAyBC,KAAzB,KAAmC,GAAvC,EAA4C;AAC1CtB,MAAAA,KAAK,GAAG,EAAR;AACD,KAFD,MAEO,IAAI,KAAKL,KAAL,CAAW0B,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AAClDtB,MAAAA,KAAK,GAAG,EAAR;AACD,KAFM,MAEA,IAAI,KAAKL,KAAL,CAAW0B,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AAClDtB,MAAAA,KAAK,GAAG,EAAR;AACD;;AAED,QAAIK,WAAW,GAAG,EAAlB;;AAEA,SAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI9B,KAArB,EAA4B8B,CAAC,EAA7B,EAAiC;AAC/B,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKvC,KAAL,CAAW0B,aAAX,CAAyBC,KAAzC,GAAiD,CAA5D,CAAhB;AACA,UAAIa,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKvC,KAAL,CAAW0B,aAAX,CAAyBE,MAAzC,GAAkD,CAA7D,CAAhB;;AACA,aAAOlB,WAAW,CAAC0B,SAAS,GAAG,GAAZ,GAAkBI,SAAnB,CAAlB,EAAiD;AAC/CJ,QAAAA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKvC,KAAL,CAAW0B,aAAX,CAAyBC,KAAzC,GAAiD,CAA5D,CAAZ;AACAa,QAAAA,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKvC,KAAL,CAAW0B,aAAX,CAAyBE,MAAzC,GAAkD,CAA7D,CAAZ;AACD;;AAAA;AACDlB,MAAAA,WAAW,CAAC0B,SAAS,GAAG,GAAZ,GAAkBI,SAAnB,CAAX,GAA2C,IAA3C;AACD;;AAED,WAAO9B,WAAP;AACD;;AAEDG,EAAAA,QAAQ,CAACH,WAAD,EAAc;AAEpB,QAAIE,WAAW,GAAG,EAAlB;;AAEA,SAAK,IAAIK,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI,KAAKjB,KAAL,CAAW0B,aAAX,CAAyBE,MAAlD,EAA0DX,GAAG,EAA7D,EAAiE;AAC/D,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI,KAAKlB,KAAL,CAAW0B,aAAX,CAAyBC,KAAlD,EAAyDT,GAAG,EAA5D,EAAgE;AAC9D,YAAIuB,OAAO,GAAG/B,WAAW,CAACQ,GAAG,GAAG,GAAN,GAAYD,GAAb,CAAX,GAA+B,IAA/B,GAAsC,KAApD;AAEAL,QAAAA,WAAW,CAACM,GAAG,GAAG,GAAN,GAAYD,GAAb,CAAX,GAA+B;AAC7ByB,UAAAA,EAAE,EAAExB,GAAG,GAAG,GAAN,GAAYD,GADa;AAE7BA,UAAAA,GAAG,EAAEA,GAFwB;AAG7BC,UAAAA,GAAG,EAAEA,GAHwB;AAI7Ba,UAAAA,KAAK,EAAEU,OAJsB;AAK7BE,UAAAA,MAAM,EAAE,KALqB;AAM7BC,UAAAA,OAAO,EAAE,KANoB;AAO7BC,UAAAA,WAAW,EAAE;AAPgB,SAA/B;AASD;AACF;;AAED,WAAOjC,WAAP;AACD;;AAEDkC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,aAAa,EAAE,KAAK9C,KAAL,CAAW0B,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAE,KAAK1B,KAAL,CAAW+C,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AArIgC;;AAwInC,eAAelD,IAAf","sourcesContent":["import React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    boardWidth: 0,\n    ceilSize: 0,\n    ceils: {},\n    mines: {}\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const newBoardWidth = this.getBoardSize();\n    const minesObject = this.getMines();\n    const ceilsObject = this.getCeils(minesObject);\n\n   \n    for (let ceil of Object.keys(ceilsObject)) {\n      let row = ceilsObject[ceil].row;\n      let col = ceilsObject[ceil].col;\n      \n      let arroundCeils = [];\n      let minesArround = 0;\n\n      arroundCeils.push((col + 1) + '/' + (row));\n      arroundCeils.push((col - 1) + '/' + (row));\n      arroundCeils.push((col) + '/' + (row + 1));\n      arroundCeils.push((col) + '/' + (row - 1));\n      arroundCeils.push((col + 1) + '/' + (row + 1));\n      arroundCeils.push((col + 1) + '/' + (row - 1));\n      arroundCeils.push((col - 1) + '/' + (row + 1));\n      arroundCeils.push((col + 1) + '/' + (row + 1));\n\n      arroundCeils = arroundCeils.filter(item => {\n        // console.log(this.props.gameDifficult.width + 1)\n        let reg = new RegExp(`[0|${this.props.gameDifficult.width + 1}|${+this.props.gameDifficult.height + 1}]`, 'g');\n        if (reg.test(item)) {\n          return;\n        } else {\n          return item\n        }\n      });\n\n      arroundCeils.forEach(item => {\n        // console.log(item, ceilsObject[item]);\n        minesArround = ceilsObject[item].mined ? minesArround++ : minesArround; \n      });\n\n      console.log('mines arround: ', minesArround);\n    }\n\n    console.log('mines: ', Object.keys(minesObject).length);\n\n    // console.log(ceilsObject);\n  }\n\n  getBoardSize() {\n    let ceilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      ceilSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      ceilSize = 35;\n    }\n  \n    return +this.props.gameDifficult.width * ceilSize + (this.props.gameDifficult.width * 2);    \n  }\n\n  getMines() {\n\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      };\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils(minesObject) {\n\n    let ceilsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n\n        ceilsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0\n        };\n      }\n    }\n\n    return ceilsObject;\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <Board gameDifficult={this.props.gameDifficult}/>\n        <AsideMenu handleGameStatus={this.props.handleGameStatus}/>\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}