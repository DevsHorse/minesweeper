{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/board.js\";\nimport React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      ceils: {},\n      boardWidth: 0,\n      ceilSize: 0\n    };\n\n    this.gameInit = () => {\n      let newCeilSize = 90;\n\n      if (this.props.gameDifficult.width === '16') {\n        newCeilSize = 45;\n      } else if (this.props.gameDifficult.width === '30') {\n        newCeilSize = 35;\n      }\n\n      let newBoardWidth = +this.props.gameDifficult.width * newCeilSize + this.props.gameDifficult.width * 2;\n      let mines = 0;\n\n      if (this.props.gameDifficult.width === '8') {\n        mines = 10;\n      } else if (this.props.gameDifficult.width === '16') {\n        mines = 40;\n      } else if (this.props.gameDifficult.width === '30') {\n        mines = 99;\n      }\n\n      let minesObject = {};\n\n      for (let i = 1; i <= mines; i++) {\n        let randomWidth = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        let randomHeight = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n        minesObject[randomWidth + '/' + randomHeight] = {\n          mine: true\n        };\n      }\n\n      let ceilsObject = {};\n\n      for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n        for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n          let isMined = minesObject[j + '/' + i] ? minesObject[j + '/' + i].mine : false;\n          ceilsObject[j + '/' + i] = {\n            cords: [j, i],\n            mined: isMined,\n            minesArround: null,\n            opened: false\n          };\n        }\n      } // minesArray.forEach((mine) => {\n      //   ceilsObject[mine[0] + '/' + mine[1]].mined = true;      \n      // });\n      // for (let key of Object.keys(ceilsObject)) {\n      //   if (!ceilsObject[key].mined) {\n      //     let col = ceilsObject[key].cords[0];\n      //     let row = ceilsObject[key].cords[1];\n      //   }\n      // }\n\n\n      this.setState({\n        ceils: ceilsObject,\n        boardWidth: newBoardWidth,\n        ceilSize: newCeilSize\n      });\n    };\n\n    this.getCeil = () => {\n      let ceilArray = [];\n      let f = 0;\n\n      for (let key of Object.keys(this.state.ceils)) {\n        f = this.state.ceils[key].mined ? f + 1 : f;\n        ceilArray.push( /*#__PURE__*/React.createElement(Ceil, {\n          key: key,\n          ceilCords: key,\n          ceilOptions: this.state.ceils[key],\n          styleOptions: {\n            width: this.state.ceilSize,\n            height: this.state.ceilSize\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      console.log(f);\n      return ceilArray;\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  render() {\n    // console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      style: {\n        width: `${this.state.boardWidth}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, this.state.boardWidth ? this.getCeil() : null);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/board.js"],"names":["React","Ceil","Board","Component","constructor","props","state","ceils","boardWidth","ceilSize","gameInit","newCeilSize","gameDifficult","width","newBoardWidth","mines","minesObject","i","randomWidth","Math","floor","random","randomHeight","height","mine","ceilsObject","j","isMined","cords","mined","minesArround","opened","setState","getCeil","ceilArray","f","key","Object","keys","push","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    ceils: {},\n    boardWidth: 0,\n    ceilSize: 0\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit = () => {\n\n    let newCeilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCeilSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCeilSize = 35;\n    }\n   \n    let newBoardWidth = +this.props.gameDifficult.width * newCeilSize + (this.props.gameDifficult.width * 2);\n\n    let mines = 0;\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomWidth = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomHeight = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      minesObject[randomWidth + '/' + randomHeight] = {\n        mine: true\n      };\n    }\n\n    let ceilsObject = {};\n\n    for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n      for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n        let isMined = minesObject[j + '/' + i] ? minesObject[j + '/' + i].mine : false;\n\n        ceilsObject[j + '/' + i] = {\n          cords: [j, i],\n          mined: isMined,\n          minesArround: null,\n          opened: false\n        };\n      }\n    }\n   \n    // minesArray.forEach((mine) => {\n    //   ceilsObject[mine[0] + '/' + mine[1]].mined = true;      \n    // });\n\n    // for (let key of Object.keys(ceilsObject)) {\n    //   if (!ceilsObject[key].mined) {\n    //     let col = ceilsObject[key].cords[0];\n    //     let row = ceilsObject[key].cords[1];\n    //   }\n    // }\n\n    this.setState({\n      ceils: ceilsObject,\n      boardWidth: newBoardWidth,\n      ceilSize: newCeilSize\n    })\n  }\n\n  getCeil = () => {\n    let ceilArray = [];\n    let f = 0;\n    for (let key of Object.keys(this.state.ceils)) {\n      f = this.state.ceils[key].mined ? f + 1 : f;\n      ceilArray.push(\n        <Ceil \n          key={key}\n          ceilCords={key}\n          ceilOptions={this.state.ceils[key]}\n          styleOptions={{width: this.state.ceilSize, height: this.state.ceilSize}}\n        />\n      );\n    }\n\n    console.log(f);\n\n    return ceilArray;\n  }\n\n  render () {\n\n    // console.log(this.state);\n    return (\n      <div className='board' style={{width: `${this.state.boardWidth}px`}}>\n\n        {this.state.boardWidth ? this.getCeil() : null}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}