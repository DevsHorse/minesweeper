{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/board.js\";\nimport React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      ceils: {},\n      mines: [],\n      boardWidth: 0,\n      ceilSize: 0\n    };\n\n    this.gameInit = () => {\n      let newCeilSize = 60;\n\n      if (this.props.gameDifficult.width === '16') {\n        newCeilSize = 30;\n      } else if (this.props.gameDifficult.width === '30') {\n        newCeilSize = 30;\n      }\n\n      let newBoardWidth = +this.props.gameDifficult.width * newCeilSize + this.props.gameDifficult.width * 2;\n      let mines = 0;\n\n      if (this.props.gameDifficult.width === '8') {\n        mines = 10;\n      } else if (this.props.gameDifficult.width === '16') {\n        mines = 40;\n      } else if (this.props.gameDifficult.width === '30') {\n        mines = 99;\n      }\n\n      let minesArray = [];\n\n      for (let i = 1; i <= mines; i++) {\n        let randomWidth = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        let randomHeight = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n        minesArray.push([randomWidth, randomHeight]);\n      }\n\n      let ceilsObject = {};\n\n      for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n        for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n          ceilsObject[i + '' + j] = {\n            mined: false,\n            minesArround: null,\n            opened: false\n          };\n        }\n      }\n\n      console.log(ceilsObject);\n      this.setState({\n        ceils: ceilObject,\n        mines: minesArray,\n        boardWidth: newBoardWidth,\n        ceilSize: newCeilSize\n      });\n    };\n\n    this.getCeil = () => {\n      let ceilArray = []; // ceilArray.push(\n      //   <Ceil \n      //     key={Math.random()  * 1000 + j * i}\n      //     ceilCords={{width: j, heigth: i}}\n      //     ceilOptions={{\n      //       mine: isMine\n      //     }}\n      //     styleOptions={{width: this.state.ceilSize, height: this.state.ceilSize}}\n      //   />\n      // );\n\n      return ceilArray;\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  render() {\n    // console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      style: {\n        width: `${this.state.boardWidth}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, this.state.boardWidth ? this.getCeil() : null);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/board.js"],"names":["React","Ceil","Board","Component","constructor","props","state","ceils","mines","boardWidth","ceilSize","gameInit","newCeilSize","gameDifficult","width","newBoardWidth","minesArray","i","randomWidth","Math","floor","random","randomHeight","height","push","ceilsObject","j","mined","minesArround","opened","console","log","setState","ceilObject","getCeil","ceilArray","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,UAAU,EAAE,CAHN;AAINC,MAAAA,QAAQ,EAAE;AAJJ,KAJW;;AAAA,SAiBnBC,QAjBmB,GAiBR,MAAM;AACf,UAAIC,WAAW,GAAG,EAAlB;;AAEA,UAAI,KAAKP,KAAL,CAAWQ,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AAC3CF,QAAAA,WAAW,GAAG,EAAd;AACD,OAFD,MAEQ,IAAI,KAAKP,KAAL,CAAWQ,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AACnDF,QAAAA,WAAW,GAAG,EAAd;AACD;;AAED,UAAIG,aAAa,GAAG,CAAC,KAAKV,KAAL,CAAWQ,aAAX,CAAyBC,KAA1B,GAAkCF,WAAlC,GAAiD,KAAKP,KAAL,CAAWQ,aAAX,CAAyBC,KAAzB,GAAiC,CAAtG;AAEA,UAAIN,KAAK,GAAG,CAAZ;;AACA,UAAI,KAAKH,KAAL,CAAWQ,aAAX,CAAyBC,KAAzB,KAAmC,GAAvC,EAA4C;AAC1CN,QAAAA,KAAK,GAAG,EAAR;AACD,OAFD,MAEO,IAAI,KAAKH,KAAL,CAAWQ,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AAClDN,QAAAA,KAAK,GAAG,EAAR;AACD,OAFM,MAEA,IAAI,KAAKH,KAAL,CAAWQ,aAAX,CAAyBC,KAAzB,KAAmC,IAAvC,EAA6C;AAClDN,QAAAA,KAAK,GAAG,EAAR;AACD;;AAED,UAAIQ,UAAU,GAAG,EAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,KAArB,EAA4BS,CAAC,EAA7B,EAAiC;AAC/B,YAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKhB,KAAL,CAAWQ,aAAX,CAAyBC,KAAzC,GAAiD,CAA5D,CAAlB;AACA,YAAIQ,YAAY,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKhB,KAAL,CAAWQ,aAAX,CAAyBU,MAAzC,GAAkD,CAA7D,CAAnB;AACAP,QAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACN,WAAD,EAAcI,YAAd,CAAhB;AACD;;AAED,UAAIG,WAAW,GAAG,EAAlB;;AAEA,WAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKZ,KAAL,CAAWQ,aAAX,CAAyBU,MAA9C,EAAsDN,CAAC,EAAvD,EAA2D;AACzD,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKrB,KAAL,CAAWQ,aAAX,CAAyBC,KAA9C,EAAqDY,CAAC,EAAtD,EAA0D;AAExDD,UAAAA,WAAW,CAACR,CAAC,GAAG,EAAJ,GAASS,CAAV,CAAX,GAA0B;AACxBC,YAAAA,KAAK,EAAE,KADiB;AAExBC,YAAAA,YAAY,EAAE,IAFU;AAGxBC,YAAAA,MAAM,EAAE;AAHgB,WAA1B;AAKD;AACF;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAGA,WAAKO,QAAL,CAAc;AACZzB,QAAAA,KAAK,EAAE0B,UADK;AAEZzB,QAAAA,KAAK,EAAEQ,UAFK;AAGZP,QAAAA,UAAU,EAAEM,aAHA;AAIZL,QAAAA,QAAQ,EAAEE;AAJE,OAAd;AAMD,KAnEkB;;AAAA,SAqEnBsB,OArEmB,GAqET,MAAM;AACd,UAAIC,SAAS,GAAG,EAAhB,CADc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOA,SAAP;AACD,KAtFkB;AAElB;;AASDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAK9B,KAAL,CAAWG,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,WAAKE,QAAL;AACD;AACF;;AAyED0B,EAAAA,MAAM,GAAI;AAER;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACvB,QAAAA,KAAK,EAAG,GAAE,KAAKR,KAAL,CAAWG,UAAW;AAAjC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKH,KAAL,CAAWG,UAAX,GAAwB,KAAKyB,OAAL,EAAxB,GAAyC,IAF5C,CADF;AAOD;;AAnGiC;;AAsGpC,eAAehC,KAAf","sourcesContent":["import React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    ceils: {},\n    mines: [],\n    boardWidth: 0,\n    ceilSize: 0\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit = () => {\n    let newCeilSize = 60;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCeilSize = 30;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCeilSize = 30;\n    }\n   \n    let newBoardWidth = +this.props.gameDifficult.width * newCeilSize + (this.props.gameDifficult.width * 2);\n\n    let mines = 0;\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesArray = [];\n\n    for (let i = 1; i <= mines; i++) {\n      let randomWidth = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomHeight = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      minesArray.push([randomWidth, randomHeight]);\n    }\n\n    let ceilsObject = {};\n\n    for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n      for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n\n        ceilsObject[i + '' + j] = {\n          mined: false,\n          minesArround: null,\n          opened: false\n        };\n      }\n    }\n\n    console.log(ceilsObject);\n\n  \n    this.setState({\n      ceils: ceilObject,\n      mines: minesArray,\n      boardWidth: newBoardWidth,\n      ceilSize: newCeilSize\n    })\n  }\n\n  getCeil = () => {\n    let ceilArray = [];\n\n    \n\n    // ceilArray.push(\n    //   <Ceil \n    //     key={Math.random()  * 1000 + j * i}\n    //     ceilCords={{width: j, heigth: i}}\n    //     ceilOptions={{\n    //       mine: isMine\n    //     }}\n    //     styleOptions={{width: this.state.ceilSize, height: this.state.ceilSize}}\n    //   />\n    // );\n\n    return ceilArray;\n  }\n\n  render () {\n\n    // console.log(this.state);\n    return (\n      <div className='board' style={{width: `${this.state.boardWidth}px`}}>\n\n        {this.state.boardWidth ? this.getCeil() : null}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}