{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/board.js\";\nimport React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      ceils: {},\n      boardWidth: 0,\n      ceilSize: 0\n    };\n\n    this.gameInit = () => {\n      let newCeilSize = 90;\n\n      if (this.props.gameDifficult.width === '16') {\n        newCeilSize = 45;\n      } else if (this.props.gameDifficult.width === '30') {\n        newCeilSize = 35;\n      }\n\n      let newBoardWidth = +this.props.gameDifficult.width * newCeilSize + this.props.gameDifficult.width * 2;\n      let mines = 0;\n\n      if (this.props.gameDifficult.width === '8') {\n        mines = 10;\n      } else if (this.props.gameDifficult.width === '16') {\n        mines = 40;\n      } else if (this.props.gameDifficult.width === '30') {\n        mines = 99;\n      }\n\n      let minesArray = [];\n\n      for (let i = 1; i <= mines; i++) {\n        let randomWidth = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        let randomHeight = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n        minesArray.push([randomWidth, randomHeight]);\n      }\n\n      let ceilsObject = {};\n\n      for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n        for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n          ceilsObject[j + '/' + i] = {\n            mined: false,\n            minesArround: null,\n            opened: false\n          };\n        }\n      }\n\n      minesArray.forEach(mine => {\n        ceilsObject[mine[0] + '/' + mine[1]].mined = true;\n      });\n      console.log('mines: ', minesArray.length);\n      this.setState({\n        ceils: ceilsObject,\n        boardWidth: newBoardWidth,\n        ceilSize: newCeilSize\n      });\n    };\n\n    this.getCeil = () => {\n      let ceilArray = [];\n\n      for (let key of Object.keys(this.state.ceils)) {\n        console.log('length');\n        ceilArray.push( /*#__PURE__*/React.createElement(Ceil, {\n          key: key,\n          ceilCords: key,\n          ceilOptions: this.state.ceils[key],\n          styleOptions: {\n            width: this.state.ceilSize,\n            height: this.state.ceilSize\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      console.log('ceils: ', ceilArray.length);\n      return ceilArray;\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      style: {\n        width: `${this.state.boardWidth}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, this.state.boardWidth ? this.getCeil() : null);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/board.js"],"names":["React","Ceil","Board","Component","constructor","props","state","ceils","boardWidth","ceilSize","gameInit","newCeilSize","gameDifficult","width","newBoardWidth","mines","minesArray","i","randomWidth","Math","floor","random","randomHeight","height","push","ceilsObject","j","mined","minesArround","opened","forEach","mine","console","log","length","setState","getCeil","ceilArray","key","Object","keys","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    ceils: {},\n    boardWidth: 0,\n    ceilSize: 0\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit = () => {\n    let newCeilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCeilSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCeilSize = 35;\n    }\n   \n    let newBoardWidth = +this.props.gameDifficult.width * newCeilSize + (this.props.gameDifficult.width * 2);\n\n    let mines = 0;\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesArray = [];\n\n    for (let i = 1; i <= mines; i++) {\n      let randomWidth = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomHeight = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      minesArray.push([randomWidth, randomHeight]);\n    }\n\n    let ceilsObject = {};\n\n    for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n      for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n\n        ceilsObject[j + '/' + i] = {\n          mined: false,\n          minesArround: null,\n          opened: false\n        };\n      }\n    }\n\n   \n    minesArray.forEach((mine) => {\n      ceilsObject[mine[0] + '/' + mine[1]].mined = true;      \n    });\n\n    console.log('mines: ', minesArray.length);\n\n    this.setState({\n      ceils: ceilsObject,\n      boardWidth: newBoardWidth,\n      ceilSize: newCeilSize\n    })\n  }\n\n  getCeil = () => {\n    let ceilArray = [];\n\n    for (let key of Object.keys(this.state.ceils)) {\n      console.log('length');\n      ceilArray.push(\n        <Ceil \n          key={key}\n          ceilCords={key}\n          ceilOptions={this.state.ceils[key]}\n          styleOptions={{width: this.state.ceilSize, height: this.state.ceilSize}}\n        />\n      );\n    }\n\n    console.log('ceils: ', ceilArray.length);\n\n    return ceilArray;\n  }\n\n  render () {\n\n    console.log(this.state);\n    return (\n      <div className='board' style={{width: `${this.state.boardWidth}px`}}>\n\n        {this.state.boardWidth ? this.getCeil() : null}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}