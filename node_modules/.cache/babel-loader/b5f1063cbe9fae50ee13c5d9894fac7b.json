{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/board.js\";\nimport React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      ceils: {},\n      boardWidth: 0,\n      ceilSize: 0\n    };\n\n    this.gameInit = () => {\n      const getCeils = minesObject => {\n        let ceilsObject = {};\n\n        for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n          for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n            let isMined = minesObject[j + '/' + i] ? true : false;\n            ceilsObject[j + '/' + i] = {\n              cords: [j, i],\n              mined: isMined,\n              minesAround: null,\n              opened: false\n            };\n          }\n        }\n\n        return ceilsObject;\n      };\n\n      const asyncContainer = () => {\n        const minesObj = getMines();\n        const ceilsObj = getCeils(minesObj); // minesArray.forEach((mine) => {\n        //   ceilsObject[mine[0] + '/' + mine[1]].mined = true;      \n        // });\n        // for (let key of Object.keys(ceilsObject)) {\n        //   if (!ceilsObject[key].mined) {\n        //     let col = ceilsObject[key].cords[0];\n        //     let row = ceilsObject[key].cords[1];\n        //   }\n        // }\n\n        this.setState({\n          ceils: ceilsObj,\n          boardWidth: newBoardWidth,\n          ceilSize: newCeilSize\n        });\n      };\n\n      asyncContainer();\n    };\n\n    this.getCeil = () => {\n      let ceilArray = [];\n      let f = 0;\n\n      for (let key of Object.keys(this.state.ceils)) {\n        f = this.state.ceils[key].mined ? f + 1 : f;\n        ceilArray.push( /*#__PURE__*/React.createElement(Ceil, {\n          key: key,\n          ceilCords: key,\n          ceilOptions: this.state.ceils[key],\n          styleOptions: {\n            width: this.state.ceilSize,\n            height: this.state.ceilSize\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      console.log(f);\n      return ceilArray;\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  render() {\n    // console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      style: {\n        width: `${this.state.boardWidth}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, this.state.boardWidth ? this.getCeil() : null);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/board.js"],"names":["React","Ceil","Board","Component","constructor","props","state","ceils","boardWidth","ceilSize","gameInit","getCeils","minesObject","ceilsObject","i","gameDifficult","height","j","width","isMined","cords","mined","minesAround","opened","asyncContainer","minesObj","getMines","ceilsObj","setState","newBoardWidth","newCeilSize","getCeil","ceilArray","f","key","Object","keys","push","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Ceil from './ceil';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    ceils: {},\n    boardWidth: 0,\n    ceilSize: 0\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n\n\n  gameInit = () => {\n\n    \n    \n\n    const getCeils = (minesObject) => {\n      let ceilsObject = {};\n\n      for (let i = 1; i <= this.props.gameDifficult.height; i++) {\n        for (let j = 1; j <= this.props.gameDifficult.width; j++) {\n          let isMined = minesObject[j + '/' + i] ? true : false;\n\n          ceilsObject[j + '/' + i] = {\n            cords: [j, i],\n            mined: isMined,\n            minesAround: null,\n            opened: false\n          };\n        }\n      }\n\n      return ceilsObject;\n    };\n\n\n    const asyncContainer = () => {\n\n      const minesObj = getMines();\n\n      const ceilsObj = getCeils(minesObj);\n    \n      // minesArray.forEach((mine) => {\n      //   ceilsObject[mine[0] + '/' + mine[1]].mined = true;      \n      // });\n\n      // for (let key of Object.keys(ceilsObject)) {\n      //   if (!ceilsObject[key].mined) {\n      //     let col = ceilsObject[key].cords[0];\n      //     let row = ceilsObject[key].cords[1];\n      //   }\n      // }\n\n      this.setState({\n        ceils: ceilsObj,\n        boardWidth: newBoardWidth,\n        ceilSize: newCeilSize\n      })\n    }\n\n    asyncContainer();\n  }\n\n  getCeil = () => {\n    let ceilArray = [];\n    let f = 0;\n    for (let key of Object.keys(this.state.ceils)) {\n      f = this.state.ceils[key].mined ? f + 1 : f;\n      ceilArray.push(\n        <Ceil \n          key={key}\n          ceilCords={key}\n          ceilOptions={this.state.ceils[key]}\n          styleOptions={{width: this.state.ceilSize, height: this.state.ceilSize}}\n        />\n      );\n    }\n\n    console.log(f);\n\n    return ceilArray;\n  }\n\n  render () {\n\n    // console.log(this.state);\n    return (\n      <div className='board' style={{width: `${this.state.boardWidth}px`}}>\n\n        {this.state.boardWidth ? this.getCeil() : null}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}