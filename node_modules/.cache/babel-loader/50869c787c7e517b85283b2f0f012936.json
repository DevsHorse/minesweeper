{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/game.js\";\nimport React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      boardWidth: 0,\n      ceils: {},\n      mines: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const sizes = this.getBoardAndCeilSize();\n    const newBoardWidth = sizes.boardWidth;\n    const minesObject = this.getMines();\n    const ceilsObject = this.getCeils(minesObject);\n\n    for (let ceil of Object.keys(ceilsObject)) {\n      if (!ceilsObject[ceil].mined) {\n        const newMinesAround = this.getMinesAround(ceilsObject, ceil, minesObject); // console.log(newMinesAround);\n\n        ceilsObject[ceil].minesAround = newMinesAround;\n      }\n    }\n\n    this.setState({\n      boardWidth: newBoardWidth,\n      ceilSize: sizes.ceilSize,\n      ceils: ceilsObject,\n      mines: minesObject\n    });\n  }\n\n  getBoardAndCeilSize() {\n    let newCeilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCeilSize = 45;\n    } else if (this.props.gameDifficult.width === '30') {\n      newCeilSize = 35;\n    }\n\n    return {\n      ceilSize: newCeilSize,\n      boardWidth: +this.props.gameDifficult.width * newCeilSize + this.props.gameDifficult.width * 2\n    };\n  }\n\n  getMines() {\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      }\n\n      ;\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils(minesObject) {\n    let ceilsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n        ceilsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0\n        };\n      }\n    }\n\n    return ceilsObject;\n  }\n\n  getMinesAround(ceilsObject, ceil, minesObject) {\n    let row = ceilsObject[ceil].row;\n    let col = ceilsObject[ceil].col;\n    let arroundCeils = [col + 1 + '/' + row, col - 1 + '/' + row, col + '/' + (row + 1), col + '/' + (row - 1), col + 1 + '/' + (row + 1), col - 1 + '/' + (row - 1), col + 1 + '/' + (row - 1), col - 1 + '/' + (row + 1)];\n    let newMinesAround = 0;\n    arroundCeils = arroundCeils.forEach(item => {\n      let reg = new RegExp(`^(0\\/)|(\\/0)|(${+this.props.gameDifficult.width + 1})|(${+this.props.gameDifficult.height + 1})`, 'g');\n      console.log(item.match(`/^(0\\/)|(\\/0)|(${+this.props.gameDifficult.width + 1})|(${+this.props.gameDifficult.height + 1})`));\n\n      if (!item.match(reg).length) {\n        newMinesAround = minesObject[item] ? newMinesAround += 1 : newMinesAround;\n      } else {\n        newMinesAround = newMinesAround;\n        return;\n      }\n    });\n    return newMinesAround;\n  }\n\n  render() {\n    let reg2 = /^(0\\/)|(\\/0)$|(9)/g; // console.log('9/2'.match(reg2));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      gameState: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AsideMenu, {\n      handleGameStatus: this.props.handleGameStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/game.js"],"names":["React","Board","AsideMenu","Game","Component","constructor","props","state","boardWidth","ceils","mines","componentDidMount","gameInit","sizes","getBoardAndCeilSize","newBoardWidth","minesObject","getMines","ceilsObject","getCeils","ceil","Object","keys","mined","newMinesAround","getMinesAround","minesAround","setState","ceilSize","newCeilSize","gameDifficult","width","i","randomCol","Math","floor","random","randomRow","height","row","col","isMined","id","opened","flagged","arroundCeils","forEach","item","reg","RegExp","console","log","match","length","render","reg2","handleGameStatus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    boardWidth: 0,\n    ceils: {},\n    mines: {}\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const sizes = this.getBoardAndCeilSize();\n    const newBoardWidth = sizes.boardWidth;\n    const minesObject = this.getMines();\n    const ceilsObject = this.getCeils(minesObject);\n\n   \n    for (let ceil of Object.keys(ceilsObject)) {\n        if (!ceilsObject[ceil].mined) {\n          const newMinesAround = this.getMinesAround(ceilsObject, ceil, minesObject);\n          // console.log(newMinesAround);\n          ceilsObject[ceil].minesAround = newMinesAround;\n        }      \n    }\n      \n    this.setState({\n      boardWidth: newBoardWidth,\n      ceilSize: sizes.ceilSize,\n      ceils: ceilsObject,\n      mines: minesObject\n    });\n  }\n\n  getBoardAndCeilSize() {\n    let newCeilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCeilSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCeilSize = 35;\n    }\n  \n    return {\n      ceilSize: newCeilSize,\n      boardWidth: +this.props.gameDifficult.width * newCeilSize + (this.props.gameDifficult.width * 2)\n    }    \n  }\n\n  getMines() {\n\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      };\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils(minesObject) {\n\n    let ceilsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n\n        ceilsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0\n        };\n      }\n    }\n\n    return ceilsObject;\n  }\n\n  getMinesAround(ceilsObject, ceil, minesObject) {\n    let row = ceilsObject[ceil].row;\n    let col = ceilsObject[ceil].col;\n    \n    let arroundCeils = [\n      (col + 1) + '/' + (row),\n      (col - 1) + '/' + (row),\n      (col) + '/' + (row + 1),\n      (col) + '/' + (row - 1),\n      (col + 1) + '/' + (row + 1),\n      (col - 1) + '/' + (row - 1),\n      (col + 1) + '/' + (row - 1),\n      (col - 1) + '/' + (row + 1)\n    ];\n\n    let newMinesAround = 0;\n\n    arroundCeils = arroundCeils.forEach(item => {\n\n      let reg = new RegExp(`^(0\\/)|(\\/0)|(${+this.props.gameDifficult.width + 1})|(${+this.props.gameDifficult.height + 1})`, 'g');\n     \n      console.log(item.match(`/^(0\\/)|(\\/0)|(${+this.props.gameDifficult.width + 1})|(${+this.props.gameDifficult.height + 1})`));\n      if (!item.match(reg).length) {\n        newMinesAround = minesObject[item] ?  newMinesAround += 1 : newMinesAround;\n      } else {\n        newMinesAround = newMinesAround;\n        return;\n      }\n    });\n\n   \n    return newMinesAround;\n  }\n\n  render() {\n    let reg2 = /^(0\\/)|(\\/0)$|(9)/g;\n\n    // console.log('9/2'.match(reg2));\n    return (\n      <div className=\"container\">\n        <Board gameState={this.state}/>\n        <AsideMenu handleGameStatus={this.props.handleGameStatus}/>\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}