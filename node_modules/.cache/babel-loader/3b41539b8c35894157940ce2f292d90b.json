{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/game.js\";\nimport React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      boardWidth: 0,\n      ceilSize: 0,\n      ceils: {},\n      mines: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const newBoardWidth = this.getBoardSize();\n    const minesObject = this.getMines();\n    console.log('mines: ', Object.keys(minesObject).length);\n  }\n\n  getBoardSize() {\n    let ceilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      ceilSize = 45;\n    } else if (this.props.gameDifficult.width === '30') {\n      ceilSize = 35;\n    }\n\n    return +this.props.gameDifficult.width * ceilSize + this.props.gameDifficult.width * 2;\n  }\n\n  getMines() {\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      }\n\n      ;\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils() {\n    let ceilArray = [];\n    let f = 0;\n\n    for (let key of Object.keys(this.state.ceils)) {\n      f = this.state.ceils[key].mined ? f + 1 : f;\n      ceilArray.push( /*#__PURE__*/React.createElement(Ceil, {\n        key: key,\n        ceilCords: key,\n        ceilOptions: this.state.ceils[key],\n        styleOptions: {\n          width: this.state.ceilSize,\n          height: this.state.ceilSize\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    console.log(f);\n    return ceilArray;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      gameDifficult: this.props.gameDifficult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AsideMenu, {\n      handleGameStatus: this.props.handleGameStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/game.js"],"names":["React","Board","AsideMenu","Game","Component","constructor","props","state","boardWidth","ceilSize","ceils","mines","componentDidMount","gameInit","newBoardWidth","getBoardSize","minesObject","getMines","console","log","Object","keys","length","gameDifficult","width","i","randomCol","Math","floor","random","randomRow","height","getCeils","ceilArray","f","key","mined","push","render","handleGameStatus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    boardWidth: 0,\n    ceilSize: 0,\n    ceils: {},\n    mines: {}\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const newBoardWidth = this.getBoardSize();\n    const minesObject = this.getMines();\n\n    console.log('mines: ', Object.keys(minesObject).length);\n\n  }\n\n  getBoardSize() {\n    let ceilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      ceilSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      ceilSize = 35;\n    }\n  \n    return +this.props.gameDifficult.width * ceilSize + (this.props.gameDifficult.width * 2);    \n  }\n\n  getMines() {\n\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      };\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils() {\n    let ceilArray = [];\n    let f = 0;\n    for (let key of Object.keys(this.state.ceils)) {\n      f = this.state.ceils[key].mined ? f + 1 : f;\n      ceilArray.push(\n        <Ceil \n          key={key}\n          ceilCords={key}\n          ceilOptions={this.state.ceils[key]}\n          styleOptions={{width: this.state.ceilSize, height: this.state.ceilSize}}\n        />\n      );\n    }\n\n    console.log(f);\n\n    return ceilArray;\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <Board gameDifficult={this.props.gameDifficult}/>\n        <AsideMenu handleGameStatus={this.props.handleGameStatus}/>\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}