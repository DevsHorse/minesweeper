{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/board.js\";\nimport React from 'react';\nimport cell from './cell';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getcell = () => {\n      let cellArray = [];\n\n      for (let key of Object.keys(this.props.gameState.cells)) {\n        cellArray.push( /*#__PURE__*/React.createElement(\"cell\", {\n          key: key,\n          cellOptions: this.props.gameState.cells[key],\n          styleOptions: {\n            width: this.props.gameState.cellSize,\n            height: this.props.gameState.cellSize\n          },\n          handleClick: this.props.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return cellArray;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      style: {\n        minWidth: this.props.gameState.boardWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, this.getcell());\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/board.js"],"names":["React","cell","Board","Component","constructor","props","getcell","cellArray","key","Object","keys","gameState","cells","push","width","cellSize","height","handleClick","render","minWidth","boardWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAInBC,OAJmB,GAIT,MAAM;AACd,UAAIC,SAAS,GAAG,EAAhB;;AAEA,WAAK,IAAIC,GAAT,IAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWM,SAAX,CAAqBC,KAAjC,CAAhB,EAAyD;AAEvDL,QAAAA,SAAS,CAACM,IAAV,eACE;AACE,UAAA,GAAG,EAAEL,GADP;AAEE,UAAA,WAAW,EAAE,KAAKH,KAAL,CAAWM,SAAX,CAAqBC,KAArB,CAA2BJ,GAA3B,CAFf;AAGE,UAAA,YAAY,EAAE;AAACM,YAAAA,KAAK,EAAE,KAAKT,KAAL,CAAWM,SAAX,CAAqBI,QAA7B;AAAuCC,YAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWM,SAAX,CAAqBI;AAApE,WAHhB;AAIE,UAAA,WAAW,EAAE,KAAKV,KAAL,CAAWY,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,aAAOV,SAAP;AACD,KApBkB;AAElB;;AAoBDW,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWM,SAAX,CAAqBS;AAAhC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKd,OAAL,EAFH,CADF;AAOD;;AA/BiC;;AAkCpC,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport cell from './cell';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  getcell = () => {\n    let cellArray = [];\n\n    for (let key of Object.keys(this.props.gameState.cells)) {\n  \n      cellArray.push(\n        <cell \n          key={key}\n          cellOptions={this.props.gameState.cells[key]}\n          styleOptions={{width: this.props.gameState.cellSize, height: this.props.gameState.cellSize}}\n          handleClick={this.props.handleClick}\n        />\n      );\n    }\n\n    return cellArray;\n  }\n\n  render () {\n    return (\n      <div className='board' style={{minWidth: this.props.gameState.boardWidth}}>\n\n        {this.getcell()}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}