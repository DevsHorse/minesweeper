{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/miner/miner-game/src/game.js\";\nimport React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      boardWidth: 0,\n      ceils: {},\n      mines: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const sizes = this.getBoardAndCeilSize();\n    const newBoardWidth = sizes.boardWidth;\n    const minesObject = this.getMines();\n    const ceilsObject = this.getCeils(minesObject);\n\n    for (let ceil of Object.keys(ceilsObject)) {\n      if (!ceilsObject[ceil].mined) {\n        let row = ceilsObject[ceil].row;\n        let col = ceilsObject[ceil].col;\n        let arroundCeils = [];\n        let newMinesAround = 0;\n        arroundCeils.push(col + 1 + '/' + row);\n        arroundCeils.push(col - 1 + '/' + row);\n        arroundCeils.push(col + '/' + (row + 1));\n        arroundCeils.push(col + '/' + (row - 1));\n        arroundCeils.push(col + 1 + '/' + (row + 1));\n        arroundCeils.push(col - 1 + '/' + (row - 1));\n        arroundCeils.push(col + 1 + '/' + (row - 1));\n        arroundCeils.push(col - 1 + '/' + (row + 1)); // arroundCeils = arroundCeils.filter(item => {\n        //   let reg = new RegExp(\n        //     `[0|${+this.props.gameDifficult.width + 1}\n        //       |${+this.props.gameDifficult.height + 1}]`,\n        //     'g'\n        //   );\n        //   if (reg.test(item)) {\n        //     return;\n        //   } else {\n        //     return item\n        //   }\n        // });\n\n        console.log(ceil + ': ' + arroundCeils); // arroundCeils.forEach(item => {\n        //   newMinesAround = ceilsObject[item].mined ? newMinesAround + 1 : newMinesAround; \n        // });\n        // ceilsObject[ceil].minesAround = newMinesAround;\n      }\n    }\n\n    this.setState({\n      boardWidth: newBoardWidth,\n      ceilSize: sizes.ceilSize,\n      ceils: ceilsObject,\n      mines: minesObject\n    });\n  }\n\n  getBoardAndCeilSize() {\n    let newCeilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCeilSize = 45;\n    } else if (this.props.gameDifficult.width === '30') {\n      newCeilSize = 35;\n    }\n\n    return {\n      ceilSize: newCeilSize,\n      boardWidth: +this.props.gameDifficult.width * newCeilSize + this.props.gameDifficult.width * 2\n    };\n  }\n\n  getMines() {\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      }\n\n      ;\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils(minesObject) {\n    let ceilsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n        ceilsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0\n        };\n      }\n    }\n\n    return ceilsObject;\n  }\n\n  render() {\n    // console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      gameState: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AsideMenu, {\n      handleGameStatus: this.props.handleGameStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/devhorse/Main/projects/miner/miner-game/src/game.js"],"names":["React","Board","AsideMenu","Game","Component","constructor","props","state","boardWidth","ceils","mines","componentDidMount","gameInit","sizes","getBoardAndCeilSize","newBoardWidth","minesObject","getMines","ceilsObject","getCeils","ceil","Object","keys","mined","row","col","arroundCeils","newMinesAround","push","console","log","setState","ceilSize","newCeilSize","gameDifficult","width","i","randomCol","Math","floor","random","randomRow","height","isMined","id","opened","flagged","minesAround","render","handleGameStatus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    boardWidth: 0,\n    ceils: {},\n    mines: {}\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.gameInit();\n    }\n  }\n\n  gameInit() {\n    const sizes = this.getBoardAndCeilSize();\n    const newBoardWidth = sizes.boardWidth;\n    const minesObject = this.getMines();\n    const ceilsObject = this.getCeils(minesObject);\n\n   \n    for (let ceil of Object.keys(ceilsObject)) {\n      if (!ceilsObject[ceil].mined) {\n\n        let row = ceilsObject[ceil].row;\n        let col = ceilsObject[ceil].col;\n        \n        let arroundCeils = [];\n        let newMinesAround = 0;\n\n        arroundCeils.push((col + 1) + '/' + (row));\n        arroundCeils.push((col - 1) + '/' + (row));\n        arroundCeils.push((col) + '/' + (row + 1));\n        arroundCeils.push((col) + '/' + (row - 1));\n        arroundCeils.push((col + 1) + '/' + (row + 1));\n        arroundCeils.push((col - 1) + '/' + (row - 1));\n        arroundCeils.push((col + 1) + '/' + (row - 1));\n        arroundCeils.push((col - 1) + '/' + (row + 1));\n\n        // arroundCeils = arroundCeils.filter(item => {\n\n        //   let reg = new RegExp(\n        //     `[0|${+this.props.gameDifficult.width + 1}\n        //       |${+this.props.gameDifficult.height + 1}]`,\n        //     'g'\n        //   );\n\n        //   if (reg.test(item)) {\n        //     return;\n        //   } else {\n        //     return item\n        //   }\n        // });\n\n        console.log(ceil + ': ' + arroundCeils);\n      \n        // arroundCeils.forEach(item => {\n        //   newMinesAround = ceilsObject[item].mined ? newMinesAround + 1 : newMinesAround; \n        // });\n  \n        // ceilsObject[ceil].minesAround = newMinesAround;\n      }\n      \n    }\n\n    this.setState({\n      boardWidth: newBoardWidth,\n      ceilSize: sizes.ceilSize,\n      ceils: ceilsObject,\n      mines: minesObject\n    });\n  }\n\n  getBoardAndCeilSize() {\n    let newCeilSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCeilSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCeilSize = 35;\n    }\n  \n    return {\n      ceilSize: newCeilSize,\n      boardWidth: +this.props.gameDifficult.width * newCeilSize + (this.props.gameDifficult.width * 2)\n    }    \n  }\n\n  getMines() {\n\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n      let randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      let randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      while (minesObject[randomCol + '/' + randomRow]) {\n        randomCol = Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n        randomRow = Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      };\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCeils(minesObject) {\n\n    let ceilsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n\n        ceilsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0\n        };\n      }\n    }\n\n    return ceilsObject;\n  }\n\n  render() {\n\n    // console.log(this.state);\n\n    return (\n      <div className=\"container\">\n        <Board gameState={this.state}/>\n        <AsideMenu handleGameStatus={this.props.handleGameStatus}/>\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}