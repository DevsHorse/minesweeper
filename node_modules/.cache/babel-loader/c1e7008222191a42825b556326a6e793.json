{"ast":null,"code":"var _jsxFileName = \"/home/devhorse/Main/projects/REACT/miner/miner-game/src/board.js\";\nimport React from 'react';\nimport Cell from './cell';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getCell = () => {\n      let cellArray = [];\n\n      for (let key of Object.keys(this.props.gameState.cells)) {\n        cellArray.push( /*#__PURE__*/React.createElement(Cell, {\n          key: key,\n          cellOptions: this.props.gameState.cells[key],\n          isGameOver: this.props.gameOver,\n          styleOptions: {\n            width: this.props.gameState.cellSize,\n            height: this.props.gameState.cellSize\n          },\n          handleClick: this.props.handleClick,\n          cheatOn: this.props.cheatOn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return cellArray;\n    };\n  }\n\n  render() {\n    const gameOver = this.props.gameOver ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-over-or-won\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 44\n      }\n    }, \"Game Over\") : null;\n    const gameWon = this.props.gameWon ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-over-or-won\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 42\n      }\n    }, \"You won! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 85\n      }\n    }), \"Time: \", this.props.score) : null;\n    const gamePause = this.props.pause ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-over-or-won\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }\n    }, \"Pause\") : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      style: {\n        minWidth: this.props.gameState.boardWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, this.getCell(), gameOver, gameWon, gamePause);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/devhorse/Main/projects/REACT/miner/miner-game/src/board.js"],"names":["React","Cell","faThumbsDown","Board","Component","constructor","props","getCell","cellArray","key","Object","keys","gameState","cells","push","gameOver","width","cellSize","height","handleClick","cheatOn","render","gameWon","score","gamePause","pause","minWidth","boardWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,mCAA7B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAInBC,OAJmB,GAIT,MAAM;AACd,UAAIC,SAAS,GAAG,EAAhB;;AAEA,WAAK,IAAIC,GAAT,IAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWM,SAAX,CAAqBC,KAAjC,CAAhB,EAAyD;AAEvDL,QAAAA,SAAS,CAACM,IAAV,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEL,GADP;AAEE,UAAA,WAAW,EAAE,KAAKH,KAAL,CAAWM,SAAX,CAAqBC,KAArB,CAA2BJ,GAA3B,CAFf;AAGE,UAAA,UAAU,EAAE,KAAKH,KAAL,CAAWS,QAHzB;AAIE,UAAA,YAAY,EAAE;AAACC,YAAAA,KAAK,EAAE,KAAKV,KAAL,CAAWM,SAAX,CAAqBK,QAA7B;AAAuCC,YAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWM,SAAX,CAAqBK;AAApE,WAJhB;AAKE,UAAA,WAAW,EAAE,KAAKX,KAAL,CAAWa,WAL1B;AAME,UAAA,OAAO,EAAE,KAAKb,KAAL,CAAWc,OANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,aAAOZ,SAAP;AACD,KAtBkB;AAElB;;AAsBDa,EAAAA,MAAM,GAAI;AAER,UAAMN,QAAQ,GAAG,KAAKT,KAAL,CAAWS,QAAX,gBAAsB;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB,GAA0E,IAA3F;AACA,UAAMO,OAAO,GAAG,KAAKhB,KAAL,CAAWgB,OAAX,gBAAqB;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3C,YAAwD,KAAKhB,KAAL,CAAWiB,KAAnE,CAArB,GAAsG,IAAtH;AACA,UAAMC,SAAS,GAAG,KAAKlB,KAAL,CAAWmB,KAAX,gBAAmB;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAnB,GAAkE,IAApF;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWM,SAAX,CAAqBe;AAAhC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKpB,OAAL,EAFH,EAGGQ,QAHH,EAIGO,OAJH,EAKGE,SALH,CADF;AAUD;;AAzCiC;;AA4CpC,eAAerB,KAAf","sourcesContent":["import React from 'react';\nimport Cell from './cell';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  getCell = () => {\n    let cellArray = [];\n\n    for (let key of Object.keys(this.props.gameState.cells)) {\n  \n      cellArray.push(\n        <Cell \n          key={key}\n          cellOptions={this.props.gameState.cells[key]}\n          isGameOver={this.props.gameOver}\n          styleOptions={{width: this.props.gameState.cellSize, height: this.props.gameState.cellSize}}\n          handleClick={this.props.handleClick}\n          cheatOn={this.props.cheatOn}\n        />\n      );\n    }\n\n    return cellArray;\n  }\n\n  render () {\n\n    const gameOver = this.props.gameOver ? <div className='game-over-or-won'>Game Over</div> : null;\n    const gameWon = this.props.gameWon ? <div className='game-over-or-won'>You won! <br />Time: {this.props.score}</div>: null;\n    const gamePause = this.props.pause ? <div className='game-over-or-won'>Pause</div>: null;\n\n    return (\n      <div className='board' style={{minWidth: this.props.gameState.boardWidth}}>\n\n        {this.getCell()}\n        {gameOver}\n        {gameWon}\n        {gamePause}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}