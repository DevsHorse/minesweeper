{"ast":null,"code":"import _defineProperty from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Board from'./board';import AsideMenu from'./aside-menu';var Game=/*#__PURE__*/function(_React$Component){_inherits(Game,_React$Component);var _super=_createSuper(Game);function Game(props){var _this;_classCallCheck(this,Game);_this=_super.call(this);_this.state={boardWidth:0,cellSize:0,gameOver:false,gameWon:false,gameInit:false,cheatOn:false,pause:false,score:'',idInitCell:'',flags:{set:0,all:0},cells:{},mines:{}};_this.handleClick=function(id,clickType){if(!_this.state.gameInit){_this.gameInit(id);return;}if(_this.state.gameOver){return;}var currentCell=_this.state.cells[id];if(clickType==='contextmenu'){_this.handleRightClick(id);return;}if(!currentCell.opened){if(!currentCell.flagged){if(currentCell.mined){_this.handleGameOver(id);}else{currentCell.opened=true;if(!currentCell.minesAround>0){var cellsAround=_this.getMinesOrCellsAround(_this.state.cells,currentCell.id,_this.state.mines,'cells');for(var i=0;i<cellsAround.length;i++){var cell=cellsAround[i];if(!_this.state.cells[cell].flagged&&!_this.state.cells[cell].opened){_this.handleClick(cell,'click');}}}}}}_this.setState({cells:_objectSpread(_objectSpread({},_this.state.cells),{},_defineProperty({},id,currentCell))});};_this.handleRightClick=function(id){var currentCell=_this.state.cells[id];if(_this.state.gameOver||currentCell.opened){return;}var newflags=_objectSpread({},_this.state.flags);if(!currentCell.flagged&&_this.state.flags.set<_this.state.flags.all){currentCell.flagged=true;newflags.set+=1;}else if(currentCell.flagged){currentCell.flagged=false;newflags.set-=1;}else{return;}_this.setState({cells:_objectSpread(_objectSpread({},_this.state.cells),{},_defineProperty({},id,currentCell)),flags:newflags});};_this.handleGameOver=function(id){var newMineCells={};for(var _i=0,_Object$keys=Object.keys(_this.state.cells);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];if(_this.state.cells[key].mined){newMineCells[key]=_this.state.cells[key];newMineCells[key].opened=true;if(id===key){newMineCells[key].loss=true;}}}_this.setState({cells:_objectSpread(_objectSpread({},_this.state.cells),newMineCells),gameOver:true});};_this.handleWon=function(){var closedCellsCount=0;for(var _i2=0,_Object$keys2=Object.keys(_this.state.cells);_i2<_Object$keys2.length;_i2++){var key=_Object$keys2[_i2];if(!_this.state.cells[key].opened){closedCellsCount++;}}if(closedCellsCount-_this.state.flags.all===0){_this.setState({gameWon:true});}};_this.initBoard=function(){var sizes=_this.getBoardAndCellSize();var newBoardWidth=sizes.boardWidth;var cellsObject=_this.getCells({});_this.setState({boardWidth:newBoardWidth,cellSize:sizes.cellSize,cells:cellsObject});};_this.gameInit=function(id){var minesObject=_this.getRandomMines(id);var cellsObject=_this.getCells(minesObject,id);var flagsAll=Object.keys(minesObject).length;for(var _i3=0,_Object$keys3=Object.keys(cellsObject);_i3<_Object$keys3.length;_i3++){var cell=_Object$keys3[_i3];if(!cellsObject[cell].mined){var newMinesAround=_this.getMinesOrCellsAround(cellsObject,cell,minesObject,'mines');cellsObject[cell].minesAround=newMinesAround;}}_this.setState({cells:cellsObject,gameInit:true,idInitCell:id,flags:{set:0,all:flagsAll},mines:minesObject});};_this.getMinesOrCellsAround=function(cellsObject,cell,minesObject,mode){var row=cellsObject[cell].row;var col=cellsObject[cell].col;var arroundCells=[col+1+'/'+row,col-1+'/'+row,col+'/'+(row+1),col+'/'+(row-1),col+1+'/'+(row+1),col-1+'/'+(row-1),col+1+'/'+(row-1),col-1+'/'+(row+1)];var newMinesAround=0;var cellsAround=[];arroundCells=arroundCells.forEach(function(item){var reg=new RegExp(\"^(0/)|(/0)|(\".concat(+_this.props.gameDifficult.width+1,\"/)|(/\").concat(+_this.props.gameDifficult.height+1,\")\"),'g');if(!item.match(reg)){if(mode==='mines'){newMinesAround=minesObject[item]?newMinesAround+=1:newMinesAround;}else{cellsAround.push(item);}}else{if(mode==='mines'){newMinesAround=newMinesAround;}else{return;}}});if(mode==='mines'){return newMinesAround;}else{return cellsAround;}};_this.handleCheat=function(){_this.setState({cheatOn:true});};_this.handleWonScore=function(time){_this.setState({score:time});};_this.restartGame=function(event){event.preventDefault();_this.props.handleGameStatus({},false,{width:_this.props.gameDifficult.width,height:_this.props.gameDifficult.height});};_this.handlePause=function(isPause){_this.setState({pause:isPause});};return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.state.boardWidth===0){this.initBoard();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.state.idInitCell&&this.state.cells[this.state.idInitCell].opened===false){this.handleClick(this.state.idInitCell,'click');}if(this.state.flags.all&&this.state.flags.set===this.state.flags.all&&!this.state.gameWon){this.handleWon();}}},{key:\"getBoardAndCellSize\",value:function getBoardAndCellSize(){var newCellSize=90;if(this.props.gameDifficult.width==='16'){newCellSize=45;}else if(this.props.gameDifficult.width==='30'){newCellSize=35;}return{cellSize:newCellSize,boardWidth:+this.props.gameDifficult.width*newCellSize+this.props.gameDifficult.width*2};}},{key:\"getRandomMines\",value:function getRandomMines(id){var _this2=this;var randomize=function randomize(side){if(side==='col'){return Math.floor(Math.random()*_this2.props.gameDifficult.width+1);}else if(side==='row'){return Math.floor(Math.random()*_this2.props.gameDifficult.height+1);}};var mines=0;if(this.props.gameDifficult.width==='8'){mines=10;}else if(this.props.gameDifficult.width==='16'){mines=40;}else if(this.props.gameDifficult.width==='30'){mines=99;}var regCut=/[0-9]{1,2}/g;var clickedRow=+id.match(regCut)[1];var clickedCol=+id.match(regCut)[0];var arrayOfCellsArround=Object.fromEntries([[clickedCol+1+'/'+clickedRow,true],[clickedCol-1+'/'+clickedRow,true],[clickedCol+'/'+(clickedRow+1),true],[clickedCol+'/'+(clickedRow-1),true],[clickedCol+1+'/'+(clickedRow+1),true],[clickedCol-1+'/'+(clickedRow-1),true],[clickedCol+1+'/'+(clickedRow-1),true],[clickedCol-1+'/'+(clickedRow+1),true],[clickedCol+'/'+clickedRow,true]]);var minesObject={};for(var i=1;i<=mines;i++){var randomCol=randomize('col');var randomRow=randomize('row');while(minesObject[randomCol+'/'+randomRow]||arrayOfCellsArround[randomCol+'/'+randomRow]){randomCol=randomize('col');randomRow=randomize('row');};minesObject[randomCol+'/'+randomRow]=true;}return minesObject;}},{key:\"getCells\",value:function getCells(minesObject,id){var cellsObject={};for(var row=1;row<=this.props.gameDifficult.height;row++){for(var col=1;col<=this.props.gameDifficult.width;col++){var isMined=minesObject[col+'/'+row]?true:false;cellsObject[col+'/'+row]={id:col+'/'+row,row:row,col:col,mined:isMined,opened:false,flagged:false,minesAround:0,loss:false};}}return cellsObject;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Board,{gameState:this.state,handleClick:this.handleClick,gameOver:this.state.gameOver,cheatOn:this.state.cheatOn,gameWon:this.state.gameWon,score:this.state.score,pause:this.state.pause}),/*#__PURE__*/React.createElement(AsideMenu,{handleGameStatus:this.props.handleGameStatus,gameOver:this.state.gameOver,gameWon:this.state.gameWon,gameInit:this.state.gameInit,flags:this.state.flags,handleCheat:this.handleCheat,handleWonScore:this.handleWonScore,score:this.state.score,restartGame:this.restartGame,handlePause:this.handlePause}));}}]);return Game;}(React.Component);export default Game;","map":{"version":3,"sources":["/home/devhorse/Main/projects/REACT/miner/minesweeper/src/game.js"],"names":["React","Board","AsideMenu","Game","props","state","boardWidth","cellSize","gameOver","gameWon","gameInit","cheatOn","pause","score","idInitCell","flags","set","all","cells","mines","handleClick","id","clickType","currentCell","handleRightClick","opened","flagged","mined","handleGameOver","minesAround","cellsAround","getMinesOrCellsAround","i","length","cell","setState","newflags","newMineCells","Object","keys","key","loss","handleWon","closedCellsCount","initBoard","sizes","getBoardAndCellSize","newBoardWidth","cellsObject","getCells","minesObject","getRandomMines","flagsAll","newMinesAround","mode","row","col","arroundCells","forEach","item","reg","RegExp","gameDifficult","width","height","match","push","handleCheat","handleWonScore","time","restartGame","event","preventDefault","handleGameStatus","handlePause","isPause","newCellSize","randomize","side","Math","floor","random","regCut","clickedRow","clickedCol","arrayOfCellsArround","fromEntries","randomCol","randomRow","isMined","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    boardWidth: 0,\n    cellSize: 0,\n    gameOver: false,\n    gameWon: false,\n    gameInit: false,\n    cheatOn: false,\n    pause: false,\n    score: '',\n    idInitCell: '',\n    flags: {\n      set: 0,\n      all: 0 \n    },\n    cells: {},\n    mines: {}\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.initBoard();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.idInitCell && this.state.cells[this.state.idInitCell].opened === false) {\n      this.handleClick(this.state.idInitCell, 'click');\n    }\n    if (this.state.flags.all && this.state.flags.set === this.state.flags.all && !this.state.gameWon) {\n      this.handleWon();\n    }\n  }\n\n  handleClick = (id, clickType) => {\n    \n    if (!this.state.gameInit) {\n      this.gameInit(id);\n      return;\n    }\n\n    if (this.state.gameOver) {\n      return;\n    }\n\n    let currentCell = this.state.cells[id];\n\n    if ( clickType === 'contextmenu' ) {\n      this.handleRightClick(id);\n      return;\n    }\n\n    if (!currentCell.opened) {\n      if (!currentCell.flagged) {\n        if (currentCell.mined) {\n\n          this.handleGameOver(id);\n        } else {\n          currentCell.opened = true;\n\n          if (!currentCell.minesAround > 0) {\n            let cellsAround = this.getMinesOrCellsAround(this.state.cells, currentCell.id, this.state.mines, 'cells');\n\n            for( let i = 0; i < cellsAround.length; i++) {\n              let cell = cellsAround[i];\n              if (\n                !this.state.cells[cell].flagged && \n                !this.state.cells[cell].opened\n              ) {\n                this.handleClick(cell, 'click');\n              }\n            }\n          }\n        }\n      }\n    }\n  \n    this.setState({\n      cells: {\n        ...this.state.cells,\n        [id]: currentCell\n      } \n    })\n\n  }\n\n  handleRightClick = (id) => {\n    let currentCell = this.state.cells[id];\n\n    if (this.state.gameOver || currentCell.opened) {\n      return;\n    }\n\n    let newflags = {\n      ...this.state.flags\n    };\n\n    if (!currentCell.flagged && this.state.flags.set < this.state.flags.all) {\n      currentCell.flagged = true;\n      newflags.set += 1;\n    } else if (currentCell.flagged) {\n      currentCell.flagged = false;\n      newflags.set -= 1;\n    } else {\n      return;\n    }\n\n    this.setState({\n      cells: {\n        ...this.state.cells,\n        [id]: currentCell\n      },\n      flags: newflags\n    });\n  }\n\n  handleGameOver = (id) => {\n    let newMineCells = {};\n\n    for (let key of Object.keys(this.state.cells)) {\n      if (this.state.cells[key].mined) {\n        newMineCells[key] = this.state.cells[key];\n        newMineCells[key].opened = true;\n        if (id === key) {\n          newMineCells[key].loss = true;\n        }\n      }\n     \n    }\n\n    this.setState({\n      cells: {\n        ...this.state.cells,\n        ...newMineCells\n      },\n      gameOver: true\n    })\n  }\n\n  handleWon = () => {\n  \n    let closedCellsCount = 0;\n    \n    for (let key of Object.keys(this.state.cells)) {\n      if (!this.state.cells[key].opened) {\n        closedCellsCount++;\n      }\n    }\n\n    if (closedCellsCount - this.state.flags.all === 0) {\n      this.setState({\n        gameWon: true\n      });\n    }\n  }\n\n  initBoard = () => {\n    const sizes = this.getBoardAndCellSize();\n    const newBoardWidth = sizes.boardWidth;\n    const cellsObject = this.getCells({});\n\n    this.setState({\n      boardWidth: newBoardWidth,\n      cellSize: sizes.cellSize,\n      cells: cellsObject\n    });\n  }\n\n  gameInit = (id) => {\n\n    const minesObject = this.getRandomMines(id);\n    const cellsObject = this.getCells(minesObject, id);\n    const flagsAll = Object.keys(minesObject).length;\n\n    for (let cell of Object.keys(cellsObject)) {\n        if (!cellsObject[cell].mined) {\n\n          const newMinesAround = this.getMinesOrCellsAround(cellsObject, cell, minesObject, 'mines');\n          cellsObject[cell].minesAround = newMinesAround;\n        }\n    }\n\n    this.setState({\n      cells: cellsObject,\n      gameInit: true,\n      idInitCell: id,\n      flags: {\n        set: 0,\n        all: flagsAll\n      },\n      mines: minesObject\n    });\n  }\n\n  getBoardAndCellSize() {\n    let newCellSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCellSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCellSize = 35;\n    }\n  \n    return {\n      cellSize: newCellSize,\n      boardWidth: +this.props.gameDifficult.width * newCellSize + (this.props.gameDifficult.width * 2)\n    }    \n  }\n\n  getRandomMines(id) {\n\n    const randomize = (side) => {\n      if (side === 'col') {\n        return Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      } else if (side === 'row') {\n        return Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      }\n    };\n\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    const regCut = /[0-9]{1,2}/g;\n    const clickedRow = +id.match(regCut)[1];\n    const clickedCol = +id.match(regCut)[0];\n\n    const arrayOfCellsArround = Object.fromEntries([\n      [(clickedCol + 1) + '/' + (clickedRow), true],\n      [(clickedCol - 1) + '/' + (clickedRow), true],\n      [(clickedCol) + '/' + (clickedRow + 1), true],\n      [(clickedCol) + '/' + (clickedRow - 1), true],\n      [(clickedCol + 1) + '/' + (clickedRow + 1), true],\n      [(clickedCol - 1) + '/' + (clickedRow - 1), true],\n      [(clickedCol + 1) + '/' + (clickedRow - 1), true],\n      [(clickedCol - 1) + '/' + (clickedRow + 1), true],\n      [clickedCol + '/' + clickedRow, true]\n    ]);\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n\n      let randomCol = randomize('col');\n      let randomRow = randomize('row');\n\n      while (\n        minesObject[randomCol + '/' + randomRow]\n        || \n        arrayOfCellsArround[randomCol + '/' + randomRow]\n      ) {\n        randomCol = randomize('col');\n        randomRow = randomize('row');\n      };\n\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCells(minesObject, id) {\n\n    let cellsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n\n        cellsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0,\n          loss: false\n        };\n      }\n    }\n   \n    return cellsObject;\n  }\n\n  getMinesOrCellsAround = (cellsObject, cell, minesObject, mode) => {\n    let row = cellsObject[cell].row;\n    let col = cellsObject[cell].col;\n    \n    let arroundCells = [\n      (col + 1) + '/' + (row),\n      (col - 1) + '/' + (row),\n      (col) + '/' + (row + 1),\n      (col) + '/' + (row - 1),\n      (col + 1) + '/' + (row + 1),\n      (col - 1) + '/' + (row - 1),\n      (col + 1) + '/' + (row - 1),\n      (col - 1) + '/' + (row + 1)\n    ];\n\n    let newMinesAround = 0;\n    let cellsAround = [];\n\n    arroundCells = arroundCells.forEach(item => {\n\n      let reg = new RegExp(\n        `^(0\\/)|(\\/0)|(${+this.props.gameDifficult.width + 1}\\/)|(\\/${+this.props.gameDifficult.height + 1})`,\n        'g'\n      );\n  \n      if (!item.match(reg)) {\n        if (mode === 'mines') {\n          newMinesAround = minesObject[item] ?  newMinesAround += 1 : newMinesAround;\n        } else {\n          cellsAround.push(item);\n        }\n      } else {\n        if (mode === 'mines') {\n          newMinesAround = newMinesAround;\n        } else {\n          return;\n        }\n      }\n    });\n   \n    if (mode === 'mines') {\n      return newMinesAround;\n    } else {\n      return cellsAround;\n    }\n  }\n\n  handleCheat = () => {\n    this.setState({\n      cheatOn: true\n    });\n  } \n\n  handleWonScore = (time) => {\n    this.setState({\n      score: time\n    });\n  }\n\n  restartGame = (event) => {\n    event.preventDefault();\n\n    this.props.handleGameStatus({}, false, {\n      width: this.props.gameDifficult.width,\n      height: this.props.gameDifficult.height\n    });\n  }\n\n  handlePause = (isPause) => {\n    this.setState({pause: isPause});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Board\n         gameState={this.state} \n         handleClick={this.handleClick} \n         gameOver={this.state.gameOver}\n         cheatOn={this.state.cheatOn}\n         gameWon={this.state.gameWon}\n         score={this.state.score}\n         pause={this.state.pause}\n        />\n\n        <AsideMenu\n         handleGameStatus={this.props.handleGameStatus} \n         gameOver={this.state.gameOver}\n         gameWon={this.state.gameWon}\n         gameInit={this.state.gameInit} \n         flags={this.state.flags}\n         handleCheat={this.handleCheat}\n         handleWonScore={this.handleWonScore}\n         score={this.state.score}\n         restartGame={this.restartGame}\n         handlePause={this.handlePause}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}