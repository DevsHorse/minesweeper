{"ast":null,"code":"import _classCallCheck from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/devhorse/Main/projects/REACT/miner/minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Cell from'./cell';var Board=/*#__PURE__*/function(_React$Component){_inherits(Board,_React$Component);var _super=_createSuper(Board);function Board(props){var _this;_classCallCheck(this,Board);_this=_super.call(this);_this.getCell=function(){var cellArray=[];for(var _i=0,_Object$keys=Object.keys(_this.props.gameState.cells);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];cellArray.push(/*#__PURE__*/React.createElement(Cell,{key:key,cellOptions:_this.props.gameState.cells[key],isGameOver:_this.props.gameOver,styleOptions:{width:_this.props.gameState.cellSize,height:_this.props.gameState.cellSize},handleClick:_this.props.handleClick,cheatOn:_this.props.cheatOn}));}return cellArray;};return _this;}_createClass(Board,[{key:\"render\",value:function render(){var gameOver=this.props.gameOver?/*#__PURE__*/React.createElement(\"div\",{className:\"game-over-or-won\"},\"Game Over\"):null;var gameWon=this.props.gameWon?/*#__PURE__*/React.createElement(\"div\",{className:\"game-over-or-won\"},\"You won! \",/*#__PURE__*/React.createElement(\"br\",null),\"Time: \",this.props.score):null;var gamePause=this.props.pause?/*#__PURE__*/React.createElement(\"div\",{className:\"game-pause\"},\"Pause\"):null;return/*#__PURE__*/React.createElement(\"div\",{className:\"board\",style:{minWidth:this.props.gameState.boardWidth}},this.getCell(),gameOver,gameWon,gamePause);}}]);return Board;}(React.Component);export default Board;","map":{"version":3,"sources":["/home/devhorse/Main/projects/REACT/miner/minesweeper/src/board.js"],"names":["React","Cell","Board","props","getCell","cellArray","Object","keys","gameState","cells","key","push","gameOver","width","cellSize","height","handleClick","cheatOn","gameWon","score","gamePause","pause","minWidth","boardWidth","Component"],"mappings":"4pBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,GAEMC,CAAAA,K,0GACJ,eAAYC,KAAZ,CAAmB,uCACjB,wBADiB,MAInBC,OAJmB,CAIT,UAAM,CACd,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,0BAAgBC,MAAM,CAACC,IAAP,CAAY,MAAKJ,KAAL,CAAWK,SAAX,CAAqBC,KAAjC,CAAhB,6BAAyD,CAApD,GAAIC,CAAAA,GAAG,iBAAP,CAEHL,SAAS,CAACM,IAAV,cACE,oBAAC,IAAD,EACE,GAAG,CAAED,GADP,CAEE,WAAW,CAAE,MAAKP,KAAL,CAAWK,SAAX,CAAqBC,KAArB,CAA2BC,GAA3B,CAFf,CAGE,UAAU,CAAE,MAAKP,KAAL,CAAWS,QAHzB,CAIE,YAAY,CAAE,CAACC,KAAK,CAAE,MAAKV,KAAL,CAAWK,SAAX,CAAqBM,QAA7B,CAAuCC,MAAM,CAAE,MAAKZ,KAAL,CAAWK,SAAX,CAAqBM,QAApE,CAJhB,CAKE,WAAW,CAAE,MAAKX,KAAL,CAAWa,WAL1B,CAME,OAAO,CAAE,MAAKb,KAAL,CAAWc,OANtB,EADF,EAUD,CAED,MAAOZ,CAAAA,SAAP,CACD,CAtBkB,cAElB,C,yDAsBS,CAER,GAAMO,CAAAA,QAAQ,CAAG,KAAKT,KAAL,CAAWS,QAAX,cAAsB,2BAAK,SAAS,CAAC,kBAAf,cAAtB,CAA0E,IAA3F,CACA,GAAMM,CAAAA,OAAO,CAAG,KAAKf,KAAL,CAAWe,OAAX,cAAqB,2BAAK,SAAS,CAAC,kBAAf,2BAA2C,8BAA3C,UAAwD,KAAKf,KAAL,CAAWgB,KAAnE,CAArB,CAAsG,IAAtH,CACA,GAAMC,CAAAA,SAAS,CAAG,KAAKjB,KAAL,CAAWkB,KAAX,cAAmB,2BAAK,SAAS,CAAC,YAAf,UAAnB,CAA4D,IAA9E,CAEA,mBACE,2BAAK,SAAS,CAAC,OAAf,CAAuB,KAAK,CAAE,CAACC,QAAQ,CAAE,KAAKnB,KAAL,CAAWK,SAAX,CAAqBe,UAAhC,CAA9B,EAEG,KAAKnB,OAAL,EAFH,CAGGQ,QAHH,CAIGM,OAJH,CAKGE,SALH,CADF,CAUD,C,mBAzCiBpB,KAAK,CAACwB,S,EA4C1B,cAAetB,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport Cell from './cell';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  getCell = () => {\n    let cellArray = [];\n\n    for (let key of Object.keys(this.props.gameState.cells)) {\n  \n      cellArray.push(\n        <Cell \n          key={key}\n          cellOptions={this.props.gameState.cells[key]}\n          isGameOver={this.props.gameOver}\n          styleOptions={{width: this.props.gameState.cellSize, height: this.props.gameState.cellSize}}\n          handleClick={this.props.handleClick}\n          cheatOn={this.props.cheatOn}\n        />\n      );\n    }\n\n    return cellArray;\n  }\n\n  render () {\n\n    const gameOver = this.props.gameOver ? <div className='game-over-or-won'>Game Over</div> : null;\n    const gameWon = this.props.gameWon ? <div className='game-over-or-won'>You won! <br />Time: {this.props.score}</div>: null;\n    const gamePause = this.props.pause ? <div className='game-pause'>Pause</div>: null;\n\n    return (\n      <div className='board' style={{minWidth: this.props.gameState.boardWidth}}>\n\n        {this.getCell()}\n        {gameOver}\n        {gameWon}\n        {gamePause}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}