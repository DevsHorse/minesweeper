{"version":3,"sources":["start-menu.js","cell.js","board.js","aside-menu.js","game.js","App.js","index.js"],"names":["StartMenu","props","handleChoose","event","wOfH","widthXHeight","target","textContent","match","boardWidth","boardHeight","handleGameStatus","width","height","componentDidMount","isRestart","darkTheme","this","theme","currentTheme","className","onClick","React","Component","Cell","handleClick","preventDefault","cellOptions","opened","isGameOver","type","id","bgColors","mined","minesAround","flagged","fz","styleOptions","closedCellColor","ifCheatOn","isLoss","loss","isOpened","ifCheatOff","cellStyle","backgroundColor","cheatOn","isMined","icon","faVirus","style","fontSize","textAlign","closedCell","flagColor","isFlagged","faFlag","cellContent","console","log","onContextMenu","Board","getCell","cellArray","Object","keys","gameState","cells","key","push","gameOver","cellSize","gameWon","score","gamePause","pause","minWidth","AsideMenu","handleDificult","handlePause","state","init","setState","timeDifference","Date","getTime","startTime","timePassed","componentDidUpdate","handleWonScore","time","getFlagsCounter","setMines","flags","set","allMines","all","handleCheat","prompt","handleTheme","trim","timer","gameInit","setTimeout","newDate","Math","floor","seconds","minutes","clearInterval","nextTheme","headerBlockDark","menuBtnDark","faClock","restartGame","Game","idInitCell","mines","clickType","currentCell","handleGameOver","cellsAround","getMinesOrCellsAround","i","length","cell","handleRightClick","newflags","newMineCells","handleWon","closedCellsCount","initBoard","sizes","getBoardAndCellSize","newBoardWidth","cellsObject","getCells","minesObject","getRandomMines","flagsAll","newMinesAround","mode","row","col","arroundCells","forEach","item","reg","RegExp","gameDifficult","isPause","newCellSize","randomize","side","random","regCut","clickedRow","clickedCol","arrayOfCellsArround","fromEntries","randomCol","randomRow","App","isStartGame","gameDifficultProps","restart","themeProps","gamePage","body","document","querySelector","background","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d149d6eb.chunk.js","sourcesContent":["import React from 'react';\n\nclass StartMenu extends React.Component {\n\n  constructor(props) {\n    super();\n  }\n\n  handleChoose = (event) => {\n    const WXHReg = /^([0-9]{1,2}x[0-9]{1,2})\\s/;\n    const wOfH = /[0-9]{1,2}/g;\n    const widthXHeight = event.target.textContent.match(WXHReg)[0];\n    const boardWidth = widthXHeight.match(wOfH)[0];\n    const boardHeight = widthXHeight.match(wOfH)[1];\n    \n    this.props.handleGameStatus({\n      width: boardWidth,\n      height: boardHeight\n    });\n  }\n\n  componentDidMount = () => {\n    if (this.props.isRestart) {\n      this.props.handleGameStatus({\n        width: this.props.isRestart.width,\n        height: this.props.isRestart.height\n      });\n    }\n  }\n\n  render() {\n\n    const currentTheme = this.props.theme.currentTheme;\n    let darkTheme = currentTheme === 'light' ? '' : 'game-difficult-dark';    \n\n    return (\n      <div className=\"container game-difficult-container\">\n        <div className=\"start-menu\">\n          <div className={`game-difficult ${darkTheme}`} onClick={this.handleChoose} >\n            <div>8x8 </div>\n            <div className=\"game-difficult-mines\">\n              10 <span  className=\"game-difficult-mines-span\">mines</span>\n            </div>\n          </div>\n          <div className={`game-difficult ${darkTheme}`} onClick={this.handleChoose} >\n          <div>16x16 </div>\n            <div className=\"game-difficult-mines\">\n              40 <span  className=\"game-difficult-mines-span\">mines</span>\n            </div>\n          </div>\n          <div className={`game-difficult ${darkTheme}`} onClick={this.handleChoose} >\n          <div>30x16 </div>\n            <div className=\"game-difficult-mines\">\n              99 <span  className=\"game-difficult-mines-span\">mines</span>\n            </div>\n          </div>\n          <div className={`game-difficult ${darkTheme}`}>\n              soon...\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StartMenu;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVirus, faFlag } from '@fortawesome/free-solid-svg-icons';\n\n\nclass Cell extends React.Component {\n  constructor(props) {\n    super();\n    this.bgColors = [\n      '#DEDEDC',\n      '#DDFAC3', \n      '#ECEDBF', \n      '#EDDAB4', \n      '#EDC38A', \n      '#F7A1A2', \n      '#FEA785', \n      '#FF7D60', \n      '#FF323C'\n    ];\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (this.props.cellOptions.opened) {\n      return;\n    } \n\n    if (this.props.isGameOver) {\n      return;\n    }\n\n    if (event.type === 'click') {\n      this.props.handleClick(this.props.cellOptions.id, 'click');\n    } else if (event.type === 'contextmenu') {\n      this.props.handleClick(this.props.cellOptions.id, 'contextmenu');\n    }\n  }\n\n  render() {\n\n    const mined = this.props.cellOptions.mined;\n    const opened = this.props.cellOptions.opened;\n    const minesAround = this.props.cellOptions.minesAround;\n    const flagged = this.props.cellOptions.flagged;\n\n    const fz = this.props.styleOptions.width < 40 ? '30px' :\n      this.props.styleOptions.width < 50 ? '40px' : \n      '70px';\n    \n    const theme = this.props.theme.currentTheme;\n    const closedCellColor = theme === 'light' ? '#BABDB6' : '#777776';\n\n    //Cheat mode settings\n    const ifCheatOn = mined ? 'red' : opened ? this.bgColors[minesAround] : closedCellColor;\n\n    //Default settings  \n    const isLoss = this.props.cellOptions.loss ? 'red' : '#666';\n    const isOpened = opened ? minesAround > 0 ? this.bgColors[minesAround] : theme === 'light' ? this.bgColors[minesAround] : '#cecece' : closedCellColor;\n    const ifCheatOff = mined && opened ? isLoss : isOpened;\n\n    const cellStyle = {\n      ...this.props.styleOptions,\n      backgroundColor: this.props.cheatOn ? ifCheatOn : ifCheatOff\n    };\n\n    const isMined = !mined ? '' :\n     (<FontAwesomeIcon \n        icon={faVirus} \n        style={{fontSize: `${this.props.styleOptions.width}`, textAlign: 'center', width: '100%'}}\n      />);\n\n    const textContent = minesAround > 0 ? minesAround : isMined;\n    const closedCell = this.props.cellOptions.opened ? '' : theme === 'light' ? 'cell-closed' : 'cell-closed cell-closed-dark';\n\n    const flagColor = theme === 'light' ? 'flag' : 'flag-dark';\n\n    const isFlagged = !flagged ? null : \n    (<FontAwesomeIcon\n      className={flagColor} \n      icon={faFlag} \n      style={{fontSize: `${this.props.styleOptions.width}`, textAlign: 'center', width: '100%'}} \n    />);\n\n    const cellContent = opened ? textContent : isFlagged;\n\n    const currentTheme = this.props.theme.currentTheme;\n    let darkTheme = currentTheme === 'light' ? 'cell' : 'cell-dark'; \n\n\n    console.log(this.bgColors[0]);\n    return (\n      <div className={darkTheme} style={cellStyle}\n        onClick={this.handleClick}\n        onContextMenu={this.handleClick}\n      >\n        <div className={`cell-content ${closedCell}`} style={{fontSize: `${fz}`}}>\n          {cellContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cell;","import React from 'react';\nimport Cell from './cell';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  getCell = () => {\n    let cellArray = [];\n\n    for (let key of Object.keys(this.props.gameState.cells)) {\n  \n      cellArray.push(\n        <Cell \n          key={key}\n          cellOptions={this.props.gameState.cells[key]}\n          isGameOver={this.props.gameOver}\n          styleOptions={{width: this.props.gameState.cellSize, height: this.props.gameState.cellSize}}\n          handleClick={this.props.handleClick}\n          cheatOn={this.props.cheatOn}\n          theme={this.props.theme}\n        />\n      );\n    }\n\n    return cellArray;\n  }\n\n  render () {\n\n    const gameOver = this.props.gameOver ? <div className='game-over-or-won'>Game Over</div> : null;\n    const gameWon = this.props.gameWon ? <div className='game-over-or-won'>You won! <br />Time: {this.props.score}</div>: null;\n    const gamePause = this.props.pause ? <div className='game-pause'>Pause</div>: null;\n\n    const currentTheme = this.props.theme.currentTheme;\n    let darkTheme = currentTheme === 'light' ? '' : 'board-dark';   \n\n\n    return (\n      <div className={`board ${darkTheme}`} style={{minWidth: this.props.gameState.boardWidth}}>\n\n        {this.getCell()}\n        {gameOver}\n        {gameWon}\n        {gamePause}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\n\nclass AsideMenu extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      startTime: new Date().getTime(),\n      timePassed: '',\n      time: '00:00',\n      init: true\n    }\n  }\n\n  handleDificult = (event) => {\n    event.preventDefault();\n    this.props.handleGameStatus({}, false);\n  }\n\n  handlePause = () => {\n    if (this.state.init) {\n      this.props.handlePause(true);\n      this.setState({\n        init: false\n      })\n    } else {\n\n      let timeDifference = new Date().getTime() - this.state.startTime - this.state.timePassed;\n\n      this.props.handlePause(false);\n      this.setState({\n        startTime: this.state.startTime + timeDifference,\n        init: true\n      })\n    }\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.gameWon && !this.props.score) {\n      this.props.handleWonScore(this.state.time);\n    }\n  }\n\n  getFlagsCounter = () => {\n    const setMines = this.props.flags.set;\n    const allMines = this.props.flags.all;\n\n    return (`${setMines}/${allMines}`);\n  };\n\n  handleCheat = (event) => {\n    event.preventDefault();\n\n    const password = prompt('Password: ', '');\n\n    if (password === '111') {\n      this.props.handleCheat();\n    } \n  }\n\n  handleTheme = (event) => {\n    const theme = event.target.textContent.match(/^[\\w]+/g)[0].trim();\n    if (this.props.theme) {\n      this.props.theme.handleTheme(theme);\n    }\n  }\n\n  render () {\n\n    let timer;\n\n    if (this.state.init && this.props.gameInit) {\n      timer = setTimeout(() => {\n        const newDate = new Date().getTime();\n        const time = Math.floor((newDate - this.state.startTime) / 1000);\n        const seconds = time % 60;\n        const minutes = Math.floor(time / 60);\n          this.setState({\n            timePassed: newDate - this.state.startTime,\n            time: (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') +seconds\n          })\n      }, 1000);\n    } else {\n      clearInterval(timer);\n    }\n\n    if (this.props.gameOver || this.props.gameWon) {\n      clearInterval(timer);\n    }\n\n    let nextTheme = '';\n    if (this.props.theme && this.props.theme.currentTheme === 'light') {\n      nextTheme = 'dark';\n    } else {\n      nextTheme = 'light';\n    }\n\n    const currentTheme = this.props.theme.currentTheme;\n    let headerBlockDark = currentTheme === 'light' ? '' : 'header-block-dark';\n    let menuBtnDark = currentTheme === 'light' ? '' : 'menu-btn-dark'; \n \n    return (\n      <div className=\"aside-menu\">\n        <div className=\"menu-header\">\n          <div className={`header-block ${headerBlockDark}`}>\n          <FontAwesomeIcon icon={faFlag} style={{fontSize: '30px'}}/>\n            <div>\n              {this.getFlagsCounter()}\n            </div>\n          </div>\n\n          <div className={`header-block ${headerBlockDark}`}>\n          <FontAwesomeIcon icon={faClock} style={{fontSize: '30px'}}/>\n            <div>{this.state.time}</div>\n          </div>\n        </div>\n\n        {/* Cheat Button */}\n        <div>\n          <button\n            className={`menu-btn ${menuBtnDark}`}  \n            onClick={this.handleCheat}>Cheat for test</button>\n        </div>\n        {/* End Cheat Button */}\n\n        <div>\n          <button\n            className={`menu-btn ${menuBtnDark}`}   \n            onClick={this.handleTheme}>{nextTheme} theme</button>\n        </div>\n\n        <div className=\"menu-footer\">\n          <button\n           className={`menu-btn ${menuBtnDark}`} \n           onClick={this.props.restartGame}\n          >\n            Restart\n          </button>\n          <button \n            className={`menu-btn ${menuBtnDark}`} \n            onClick={this.handleDificult}\n          >\n            Change difficult\n          </button>\n          <button \n            className={`menu-btn ${menuBtnDark}`} \n            onClick={this.handlePause}\n          >\n            Pause\n          </button>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default AsideMenu;","import React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    boardWidth: 0,\n    cellSize: 0,\n    gameOver: false,\n    gameWon: false,\n    gameInit: false,\n    cheatOn: false,\n    pause: false,\n    score: '',\n    idInitCell: '',\n    flags: {\n      set: 0,\n      all: 0 \n    },\n    cells: {},\n    mines: {}\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.initBoard();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.idInitCell && this.state.cells[this.state.idInitCell].opened === false) {\n      this.handleClick(this.state.idInitCell, 'click');\n    }\n    if (this.state.flags.all && this.state.flags.set === this.state.flags.all && !this.state.gameWon) {\n      this.handleWon();\n    }\n  }\n\n  handleClick = (id, clickType) => {\n    \n    if (!this.state.gameInit) {\n      this.gameInit(id);\n      return;\n    }\n\n    if (this.state.gameOver) {\n      return;\n    }\n\n    let currentCell = this.state.cells[id];\n\n    if ( clickType === 'contextmenu' ) {\n      this.handleRightClick(id);\n      return;\n    }\n\n    if (!currentCell.opened) {\n      if (!currentCell.flagged) {\n        if (currentCell.mined) {\n\n          this.handleGameOver(id);\n        } else {\n          currentCell.opened = true;\n\n          if (!currentCell.minesAround > 0) {\n            let cellsAround = this.getMinesOrCellsAround(this.state.cells, currentCell.id, this.state.mines, 'cells');\n\n            for( let i = 0; i < cellsAround.length; i++) {\n              let cell = cellsAround[i];\n              if (\n                !this.state.cells[cell].flagged && \n                !this.state.cells[cell].opened\n              ) {\n                this.handleClick(cell, 'click');\n              }\n            }\n          }\n        }\n      }\n    }\n  \n    this.setState({\n      cells: {\n        ...this.state.cells,\n        [id]: currentCell\n      } \n    })\n\n  }\n\n  handleRightClick = (id) => {\n    let currentCell = this.state.cells[id];\n\n    if (this.state.gameOver || currentCell.opened) {\n      return;\n    }\n\n    let newflags = {\n      ...this.state.flags\n    };\n\n    if (!currentCell.flagged && this.state.flags.set < this.state.flags.all) {\n      currentCell.flagged = true;\n      newflags.set += 1;\n    } else if (currentCell.flagged) {\n      currentCell.flagged = false;\n      newflags.set -= 1;\n    } else {\n      return;\n    }\n\n    this.setState({\n      cells: {\n        ...this.state.cells,\n        [id]: currentCell\n      },\n      flags: newflags\n    });\n  }\n\n  handleGameOver = (id) => {\n    let newMineCells = {};\n\n    for (let key of Object.keys(this.state.cells)) {\n      if (this.state.cells[key].mined) {\n        newMineCells[key] = this.state.cells[key];\n        newMineCells[key].opened = true;\n        if (id === key) {\n          newMineCells[key].loss = true;\n        }\n      }\n     \n    }\n\n    this.setState({\n      cells: {\n        ...this.state.cells,\n        ...newMineCells\n      },\n      gameOver: true\n    })\n  }\n\n  handleWon = () => {\n  \n    let closedCellsCount = 0;\n    \n    for (let key of Object.keys(this.state.cells)) {\n      if (!this.state.cells[key].opened) {\n        closedCellsCount++;\n      }\n    }\n\n    if (closedCellsCount - this.state.flags.all === 0) {\n      this.setState({\n        gameWon: true\n      });\n    }\n  }\n\n  initBoard = () => {\n    const sizes = this.getBoardAndCellSize();\n    const newBoardWidth = sizes.boardWidth;\n    const cellsObject = this.getCells({});\n\n    this.setState({\n      boardWidth: newBoardWidth,\n      cellSize: sizes.cellSize,\n      cells: cellsObject\n    });\n  }\n\n  gameInit = (id) => {\n\n    const minesObject = this.getRandomMines(id);\n    const cellsObject = this.getCells(minesObject, id);\n    const flagsAll = Object.keys(minesObject).length;\n\n    for (let cell of Object.keys(cellsObject)) {\n        if (!cellsObject[cell].mined) {\n\n          const newMinesAround = this.getMinesOrCellsAround(cellsObject, cell, minesObject, 'mines');\n          cellsObject[cell].minesAround = newMinesAround;\n        }\n    }\n\n    this.setState({\n      cells: cellsObject,\n      gameInit: true,\n      idInitCell: id,\n      flags: {\n        set: 0,\n        all: flagsAll\n      },\n      mines: minesObject\n    });\n  }\n\n  getBoardAndCellSize() {\n    let newCellSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCellSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCellSize = 35;\n    }\n  \n    return {\n      cellSize: newCellSize,\n      boardWidth: +this.props.gameDifficult.width * newCellSize + (this.props.gameDifficult.width * 2)\n    }    \n  }\n\n  getRandomMines(id) {\n\n    const randomize = (side) => {\n      if (side === 'col') {\n        return Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      } else if (side === 'row') {\n        return Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      }\n    };\n\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    const regCut = /[0-9]{1,2}/g;\n    const clickedRow = +id.match(regCut)[1];\n    const clickedCol = +id.match(regCut)[0];\n\n    const arrayOfCellsArround = Object.fromEntries([\n      [(clickedCol + 1) + '/' + (clickedRow), true],\n      [(clickedCol - 1) + '/' + (clickedRow), true],\n      [(clickedCol) + '/' + (clickedRow + 1), true],\n      [(clickedCol) + '/' + (clickedRow - 1), true],\n      [(clickedCol + 1) + '/' + (clickedRow + 1), true],\n      [(clickedCol - 1) + '/' + (clickedRow - 1), true],\n      [(clickedCol + 1) + '/' + (clickedRow - 1), true],\n      [(clickedCol - 1) + '/' + (clickedRow + 1), true],\n      [clickedCol + '/' + clickedRow, true]\n    ]);\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n\n      let randomCol = randomize('col');\n      let randomRow = randomize('row');\n\n      while (\n        minesObject[randomCol + '/' + randomRow]\n        || \n        arrayOfCellsArround[randomCol + '/' + randomRow]\n      ) {\n        randomCol = randomize('col');\n        randomRow = randomize('row');\n      };\n\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCells(minesObject, id) {\n\n    let cellsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n\n        cellsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0,\n          loss: false\n        };\n      }\n    }\n   \n    return cellsObject;\n  }\n\n  getMinesOrCellsAround = (cellsObject, cell, minesObject, mode) => {\n    let row = cellsObject[cell].row;\n    let col = cellsObject[cell].col;\n    \n    let arroundCells = [\n      (col + 1) + '/' + (row),\n      (col - 1) + '/' + (row),\n      (col) + '/' + (row + 1),\n      (col) + '/' + (row - 1),\n      (col + 1) + '/' + (row + 1),\n      (col - 1) + '/' + (row - 1),\n      (col + 1) + '/' + (row - 1),\n      (col - 1) + '/' + (row + 1)\n    ];\n\n    let newMinesAround = 0;\n    let cellsAround = [];\n\n    arroundCells = arroundCells.forEach(item => {\n\n      let reg = new RegExp(\n        `^(0\\/)|(\\/0)|(${+this.props.gameDifficult.width + 1}\\/)|(\\/${+this.props.gameDifficult.height + 1})`,\n        'g'\n      );\n  \n      if (!item.match(reg)) {\n        if (mode === 'mines') {\n          newMinesAround = minesObject[item] ?  newMinesAround += 1 : newMinesAround;\n        } else {\n          cellsAround.push(item);\n        }\n      } else {\n        if (mode === 'mines') {\n          newMinesAround = newMinesAround;\n        } else {\n          return;\n        }\n      }\n    });\n   \n    if (mode === 'mines') {\n      return newMinesAround;\n    } else {\n      return cellsAround;\n    }\n  }\n\n  handleCheat = () => {\n    this.setState({\n      cheatOn: true\n    });\n  } \n\n  handleWonScore = (time) => {\n    this.setState({\n      score: time\n    });\n  }\n\n  restartGame = (event) => {\n    event.preventDefault();\n\n    this.props.handleGameStatus({}, false, {\n      width: this.props.gameDifficult.width,\n      height: this.props.gameDifficult.height\n    });\n  }\n\n  handlePause = (isPause) => {\n    this.setState({pause: isPause});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Board\n         gameState={this.state} \n         handleClick={this.handleClick} \n         gameOver={this.state.gameOver}\n         cheatOn={this.state.cheatOn}\n         gameWon={this.state.gameWon}\n         score={this.state.score}\n         pause={this.state.pause}\n         theme={this.props.theme}\n        />\n\n        <AsideMenu\n         handleGameStatus={this.props.handleGameStatus} \n         gameOver={this.state.gameOver}\n         gameWon={this.state.gameWon}\n         gameInit={this.state.gameInit} \n         flags={this.state.flags}\n         handleCheat={this.handleCheat}\n         handleWonScore={this.handleWonScore}\n         score={this.state.score}\n         restartGame={this.restartGame}\n         handlePause={this.handlePause}\n         theme={this.props.theme}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;","import React from 'react';\nimport StartMenu from './start-menu';\nimport Game from './game';\nimport './main.css';\nimport './main-dark.css';\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n  }\n\n  state = {\n    gameDifficult: {\n      width: '',\n      height: ''\n    },\n    isStartGame: false,\n    theme: 'light',\n    isRestart: null\n  }\n\n  handleGameStatus = (gameDifficultProps, init, restart) => {\n    this.setState({\n      gameDifficult: {\n        width: gameDifficultProps.width ? gameDifficultProps.width : '',\n        height: gameDifficultProps.height ? gameDifficultProps.height : ''\n      },\n      isStartGame: init === false ? init : true,\n      isRestart: restart ? restart : null\n    })\n  }\n\n  handleTheme = (theme) => {\n    this.setState({theme: theme})\n  }\n\n  render() {\n\n    const themeProps = {\n      currentTheme: this.state.theme,\n      handleTheme: this.handleTheme\n    };\n\n    const gamePage =\n      this.state.isStartGame ?\n      (<Game\n        handleGameStatus={this.handleGameStatus}\n        gameDifficult={this.state.gameDifficult}\n        theme={themeProps}\n      />) :\n      (<StartMenu\n        handleGameStatus={this.handleGameStatus}\n        isRestart={this.state.isRestart}\n        theme={themeProps}\n      />);\n\n\n      const body = document.querySelector('body');\n\n      if (this.state.theme === 'dark') {\n        body.style.background = '#1D1D1D';\n      } else {\n        body.style.background = '#F7F7F7';\n      }\n\n\n    return (\n      <div className='App'>\n          {gamePage}   \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}