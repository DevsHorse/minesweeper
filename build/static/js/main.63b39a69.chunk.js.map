{"version":3,"sources":["start-menu.js","cell.js","board.js","aside-menu.js","game.js","App.js","index.js"],"names":["StartMenu","props","handleChoose","event","wOfH","widthXHeight","target","textContent","match","boardWidth","boardHeight","handleGameStatus","width","height","componentDidMount","isRestart","className","onClick","this","React","Component","Cell","handleClick","preventDefault","cellOptions","opened","isGameOver","type","id","bgColors","mined","minesAround","flagged","fz","styleOptions","ifCheatOn","isLoss","loss","isOpened","ifCheatOff","cellStyle","backgroundColor","cheatOn","isMined","icon","faVirus","style","fontSize","textAlign","closedCell","isFlagged","faFlag","cellContent","onContextMenu","Board","getCell","cellArray","Object","keys","gameState","cells","key","push","gameOver","cellSize","gameWon","score","gamePause","pause","minWidth","AsideMenu","handleDificult","handlePause","state","init","setState","timeDifference","Date","getTime","startTime","timePassed","componentDidUpdate","handleWonScore","time","getFlagsCounter","setMines","flags","set","allMines","all","handleCheat","prompt","timer","gameInit","setTimeout","newDate","Math","floor","seconds","minutes","clearInterval","faClock","restartGame","Game","idInitCell","mines","clickType","currentCell","handleGameOver","cellsAround","getMinesOrCellsAround","i","length","cell","handleRightClick","newflags","newMineCells","handleWon","closedCellsCount","initBoard","sizes","getBoardAndCellSize","newBoardWidth","cellsObject","getCells","minesObject","getRandomMines","flagsAll","newMinesAround","mode","row","col","arroundCells","forEach","item","reg","RegExp","gameDifficult","isPause","newCellSize","randomize","side","random","regCut","clickedRow","clickedCol","arrayOfCellsArround","fromEntries","randomCol","randomRow","App","isStartGame","gameDifficultProps","restart","gamePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63b39a69.chunk.js","sourcesContent":["import React from 'react';\n\nclass StartMenu extends React.Component {\n\n  constructor(props) {\n    super();\n  }\n\n  handleChoose = (event) => {\n    const WXHReg = /^([0-9]{1,2}x[0-9]{1,2})\\s/;\n    const wOfH = /[0-9]{1,2}/g;\n    const widthXHeight = event.target.textContent.match(WXHReg)[0];\n    const boardWidth = widthXHeight.match(wOfH)[0];\n    const boardHeight = widthXHeight.match(wOfH)[1];\n    \n    this.props.handleGameStatus({\n      width: boardWidth,\n      height: boardHeight\n    });\n  }\n\n  componentDidMount = () => {\n    if (this.props.isRestart) {\n      this.props.handleGameStatus({\n        width: this.props.isRestart.width,\n        height: this.props.isRestart.height\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container game-difficult-container\">\n        <div className=\"start-menu\">\n          <div className=\"game-difficult\" onClick={this.handleChoose} >\n            <div>8x8 </div>\n            <div className=\"game-difficult-mines\">\n              10 <span  className=\"game-difficult-mines-span\">мин</span>\n            </div>\n          </div>\n          <div className=\"game-difficult\" onClick={this.handleChoose} >\n          <div>16x16 </div>\n            <div className=\"game-difficult-mines\">\n              40 <span  className=\"game-difficult-mines-span\">мин</span>\n            </div>\n          </div>\n          <div className=\"game-difficult\" onClick={this.handleChoose} >\n          <div>30x16 </div>\n            <div className=\"game-difficult-mines\">\n              99 <span  className=\"game-difficult-mines-span\">мин</span>\n            </div>\n          </div>\n          <div className=\"game-difficult\">\n              soon...\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StartMenu;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVirus, faFlag } from '@fortawesome/free-solid-svg-icons';\n\n\nclass Cell extends React.Component {\n  constructor(props) {\n    super();\n    this.bgColors = [\n      '#DEDEDC',\n      '#DDFAC3', \n      '#ECEDBF', \n      '#EDDAB4', \n      '#EDC38A', \n      '#F7A1A2', \n      '#FEA785', \n      '#FF7D60', \n      '#FF323C'\n    ];\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (this.props.cellOptions.opened) {\n      return;\n    } \n\n    if (this.props.isGameOver) {\n      return;\n    }\n\n    if (event.type === 'click') {\n      this.props.handleClick(this.props.cellOptions.id, 'click');\n    } else if (event.type === 'contextmenu') {\n      this.props.handleClick(this.props.cellOptions.id, 'contextmenu');\n    }\n  }\n\n  render() {\n\n    const mined = this.props.cellOptions.mined;\n    const opened = this.props.cellOptions.opened;\n    const minesAround = this.props.cellOptions.minesAround;\n    const flagged = this.props.cellOptions.flagged;\n\n    const fz = this.props.styleOptions.width < 40 ? '30px' :\n      this.props.styleOptions.width < 50 ? '40px' : \n      '70px';\n\n    //Cheat mode settings\n    const ifCheatOn = mined ? 'red' : opened ? this.bgColors[minesAround] : '#BABDB6';\n\n    //Default settings  \n    const isLoss = this.props.cellOptions.loss ? 'red' : '#666';\n    const isOpened = opened ? this.bgColors[minesAround] : '#BABDB6';\n    const ifCheatOff = mined && opened ? isLoss : isOpened;\n\n    const cellStyle = {\n      ...this.props.styleOptions,\n      backgroundColor: this.props.cheatOn ? ifCheatOn : ifCheatOff\n    };\n\n    const isMined = !mined ? '' :\n     (<FontAwesomeIcon \n        icon={faVirus} \n        style={{fontSize: `${this.props.styleOptions.width}`, textAlign: 'center', width: '100%'}}\n      />);\n\n    const textContent = minesAround > 0 ? minesAround : isMined;\n    const closedCell = this.props.cellOptions.opened ? '' : 'cell-closed';\n\n    const isFlagged = !flagged ? null : \n    (<FontAwesomeIcon \n      icon={faFlag} \n      style={{fontSize: `${this.props.styleOptions.width}`, textAlign: 'center', width: '100%'}} \n    />);\n\n    const cellContent = opened ? textContent : isFlagged;\n\n    return (\n      <div className='cell' style={cellStyle}\n        onClick={this.handleClick}\n        onContextMenu={this.handleClick}\n      >\n        <div className={`cell-content ${closedCell}`} style={{fontSize: `${fz}`}}>\n          {cellContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cell;","import React from 'react';\nimport Cell from './cell';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  getCell = () => {\n    let cellArray = [];\n\n    for (let key of Object.keys(this.props.gameState.cells)) {\n  \n      cellArray.push(\n        <Cell \n          key={key}\n          cellOptions={this.props.gameState.cells[key]}\n          isGameOver={this.props.gameOver}\n          styleOptions={{width: this.props.gameState.cellSize, height: this.props.gameState.cellSize}}\n          handleClick={this.props.handleClick}\n          cheatOn={this.props.cheatOn}\n        />\n      );\n    }\n\n    return cellArray;\n  }\n\n  render () {\n\n    const gameOver = this.props.gameOver ? <div className='game-over-or-won'>Game Over</div> : null;\n    const gameWon = this.props.gameWon ? <div className='game-over-or-won'>You won! <br />Time: {this.props.score}</div>: null;\n    const gamePause = this.props.pause ? <div className='game-pause'>Pause</div>: null;\n\n    return (\n      <div className='board' style={{minWidth: this.props.gameState.boardWidth}}>\n\n        {this.getCell()}\n        {gameOver}\n        {gameWon}\n        {gamePause}\n\n      </div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\n\nclass AsideMenu extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      startTime: new Date().getTime(),\n      timePassed: '',\n      time: '00:00',\n      init: true\n    }\n  }\n\n  handleDificult = (event) => {\n    event.preventDefault();\n    this.props.handleGameStatus({}, false);\n  }\n\n  handlePause = () => {\n    if (this.state.init) {\n      this.props.handlePause(true);\n      this.setState({\n        init: false\n      })\n    } else {\n\n      let timeDifference = new Date().getTime() - this.state.startTime - this.state.timePassed;\n\n      this.props.handlePause(false);\n      this.setState({\n        startTime: this.state.startTime + timeDifference,\n        init: true\n      })\n    }\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.gameWon && !this.props.score) {\n      this.props.handleWonScore(this.state.time);\n    }\n  }\n\n  getFlagsCounter = () => {\n    const setMines = this.props.flags.set;\n    const allMines = this.props.flags.all;\n\n    return (`${setMines}/${allMines}`);\n  };\n\n  handleCheat = (event) => {\n    event.preventDefault();\n\n    const password = prompt('Password: ', '');\n\n    if (password === '111') {\n      this.props.handleCheat();\n    } \n  }\n\n  render () {\n\n    let timer;\n\n    if (this.state.init && this.props.gameInit) {\n      timer = setTimeout(() => {\n        const newDate = new Date().getTime();\n        const time = Math.floor((newDate - this.state.startTime) / 1000);\n        const seconds = time % 60;\n        const minutes = Math.floor(time / 60);\n          this.setState({\n            timePassed: newDate - this.state.startTime,\n            time: (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') +seconds\n          })\n      }, 1000);\n    } else {\n      clearInterval(timer);\n    }\n\n    if (this.props.gameOver || this.props.gameWon) {\n      clearInterval(timer);\n    }\n \n    return (\n      <div className=\"aside-menu\">\n        <div className=\"menu-header\">\n          <div className=\"header-block\">\n          <FontAwesomeIcon icon={faFlag} style={{fontSize: '30px'}}/>\n            <div>\n              {this.getFlagsCounter()}\n            </div>\n          </div>\n\n          <div className=\"header-block\">\n          <FontAwesomeIcon icon={faClock} style={{fontSize: '30px'}}/>\n            <div>{this.state.time}</div>\n          </div>\n        </div>\n\n        {/* Cheat Button */}\n        <div>\n          <button\n            className=\"menu-btn menu-btn-active\"  \n            onClick={this.handleCheat}>Cheat for test</button>\n        </div>\n        {/* End Cheat Button */}\n\n        <div className=\"menu-footer\">\n          <button\n           className=\"menu-btn\"\n           onClick={this.props.restartGame}\n          >\n            Начать сначала\n          </button>\n          <button \n            className=\"menu-btn\" \n            onClick={this.handleDificult}\n          >\n            Изменить сложность\n          </button>\n          <button \n            className=\"menu-btn\" \n            onClick={this.handlePause}\n          >\n            Пауза\n          </button>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default AsideMenu;","import React from 'react';\nimport Board from './board';\nimport AsideMenu from './aside-menu';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  state = {\n    boardWidth: 0,\n    cellSize: 0,\n    gameOver: false,\n    gameWon: false,\n    gameInit: false,\n    cheatOn: false,\n    pause: false,\n    score: '',\n    idInitCell: '',\n    flags: {\n      set: 0,\n      all: 0 \n    },\n    cells: {},\n    mines: {}\n  }\n\n  componentDidMount() {\n    if (this.state.boardWidth === 0) {\n      this.initBoard();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.idInitCell && this.state.cells[this.state.idInitCell].opened === false) {\n      this.handleClick(this.state.idInitCell, 'click');\n    }\n    if (this.state.flags.all && this.state.flags.set === this.state.flags.all && !this.state.gameWon) {\n      this.handleWon();\n    }\n  }\n\n  handleClick = (id, clickType) => {\n    \n    if (!this.state.gameInit) {\n      this.gameInit(id);\n      return;\n    }\n\n    if (this.state.gameOver) {\n      return;\n    }\n\n    let currentCell = this.state.cells[id];\n\n    if ( clickType === 'contextmenu' ) {\n      this.handleRightClick(id);\n      return;\n    }\n\n    if (!currentCell.opened) {\n      if (!currentCell.flagged) {\n        if (currentCell.mined) {\n\n          this.handleGameOver(id);\n        } else {\n          currentCell.opened = true;\n\n          if (!currentCell.minesAround > 0) {\n            let cellsAround = this.getMinesOrCellsAround(this.state.cells, currentCell.id, this.state.mines, 'cells');\n\n            for( let i = 0; i < cellsAround.length; i++) {\n              let cell = cellsAround[i];\n              if (\n                !this.state.cells[cell].flagged && \n                !this.state.cells[cell].opened\n              ) {\n                this.handleClick(cell, 'click');\n              }\n            }\n          }\n        }\n      }\n    }\n  \n    this.setState({\n      cells: {\n        ...this.state.cells,\n        [id]: currentCell\n      } \n    })\n\n  }\n\n  handleRightClick = (id) => {\n    let currentCell = this.state.cells[id];\n\n    if (this.state.gameOver || currentCell.opened) {\n      return;\n    }\n\n    let newflags = {\n      ...this.state.flags\n    };\n\n    if (!currentCell.flagged && this.state.flags.set < this.state.flags.all) {\n      currentCell.flagged = true;\n      newflags.set += 1;\n    } else if (currentCell.flagged) {\n      currentCell.flagged = false;\n      newflags.set -= 1;\n    } else {\n      return;\n    }\n\n    this.setState({\n      cells: {\n        ...this.state.cells,\n        [id]: currentCell\n      },\n      flags: newflags\n    });\n  }\n\n  handleGameOver = (id) => {\n    let newMineCells = {};\n\n    for (let key of Object.keys(this.state.cells)) {\n      if (this.state.cells[key].mined) {\n        newMineCells[key] = this.state.cells[key];\n        newMineCells[key].opened = true;\n        if (id === key) {\n          newMineCells[key].loss = true;\n        }\n      }\n     \n    }\n\n    this.setState({\n      cells: {\n        ...this.state.cells,\n        ...newMineCells\n      },\n      gameOver: true\n    })\n  }\n\n  handleWon = () => {\n  \n    let closedCellsCount = 0;\n    \n    for (let key of Object.keys(this.state.cells)) {\n      if (!this.state.cells[key].opened) {\n        closedCellsCount++;\n      }\n    }\n\n    if (closedCellsCount - this.state.flags.all === 0) {\n      this.setState({\n        gameWon: true\n      });\n    }\n  }\n\n  initBoard = () => {\n    const sizes = this.getBoardAndCellSize();\n    const newBoardWidth = sizes.boardWidth;\n    const cellsObject = this.getCells({});\n\n    this.setState({\n      boardWidth: newBoardWidth,\n      cellSize: sizes.cellSize,\n      cells: cellsObject\n    });\n  }\n\n  gameInit = (id) => {\n\n    const minesObject = this.getRandomMines(id);\n    const cellsObject = this.getCells(minesObject, id);\n    const flagsAll = Object.keys(minesObject).length;\n\n    for (let cell of Object.keys(cellsObject)) {\n        if (!cellsObject[cell].mined) {\n\n          const newMinesAround = this.getMinesOrCellsAround(cellsObject, cell, minesObject, 'mines');\n          cellsObject[cell].minesAround = newMinesAround;\n        }\n    }\n\n    this.setState({\n      cells: cellsObject,\n      gameInit: true,\n      idInitCell: id,\n      flags: {\n        set: 0,\n        all: flagsAll\n      },\n      mines: minesObject\n    });\n  }\n\n  getBoardAndCellSize() {\n    let newCellSize = 90;\n\n    if (this.props.gameDifficult.width === '16') {\n      newCellSize = 45;\n    }  else if (this.props.gameDifficult.width === '30') {\n      newCellSize = 35;\n    }\n  \n    return {\n      cellSize: newCellSize,\n      boardWidth: +this.props.gameDifficult.width * newCellSize + (this.props.gameDifficult.width * 2)\n    }    \n  }\n\n  getRandomMines(id) {\n\n    const randomize = (side) => {\n      if (side === 'col') {\n        return Math.floor(Math.random() * this.props.gameDifficult.width + 1);\n      } else if (side === 'row') {\n        return Math.floor(Math.random() * this.props.gameDifficult.height + 1);\n      }\n    };\n\n    let mines = 0;\n\n    if (this.props.gameDifficult.width === '8') {\n      mines = 10;\n    } else if (this.props.gameDifficult.width === '16') {\n      mines = 40;\n    } else if (this.props.gameDifficult.width === '30') {\n      mines = 99;\n    }\n\n    const regCut = /[0-9]{1,2}/g;\n    const clickedRow = +id.match(regCut)[1];\n    const clickedCol = +id.match(regCut)[0];\n\n    const arrayOfCellsArround = Object.fromEntries([\n      [(clickedCol + 1) + '/' + (clickedRow), true],\n      [(clickedCol - 1) + '/' + (clickedRow), true],\n      [(clickedCol) + '/' + (clickedRow + 1), true],\n      [(clickedCol) + '/' + (clickedRow - 1), true],\n      [(clickedCol + 1) + '/' + (clickedRow + 1), true],\n      [(clickedCol - 1) + '/' + (clickedRow - 1), true],\n      [(clickedCol + 1) + '/' + (clickedRow - 1), true],\n      [(clickedCol - 1) + '/' + (clickedRow + 1), true],\n      [clickedCol + '/' + clickedRow, true]\n    ]);\n\n    let minesObject = {};\n\n    for (let i = 1; i <= mines; i++) {\n\n      let randomCol = randomize('col');\n      let randomRow = randomize('row');\n\n      while (\n        minesObject[randomCol + '/' + randomRow]\n        || \n        arrayOfCellsArround[randomCol + '/' + randomRow]\n      ) {\n        randomCol = randomize('col');\n        randomRow = randomize('row');\n      };\n\n      minesObject[randomCol + '/' + randomRow] = true;\n    }\n\n    return minesObject;\n  }\n\n  getCells(minesObject, id) {\n\n    let cellsObject = {};\n\n    for (let row = 1; row <= this.props.gameDifficult.height; row++) {\n      for (let col = 1; col <= this.props.gameDifficult.width; col++) {\n        let isMined = minesObject[col + '/' + row] ? true : false;\n\n        cellsObject[col + '/' + row] = {\n          id: col + '/' + row,\n          row: row,\n          col: col,\n          mined: isMined,\n          opened: false,\n          flagged: false,\n          minesAround: 0,\n          loss: false\n        };\n      }\n    }\n   \n    return cellsObject;\n  }\n\n  getMinesOrCellsAround = (cellsObject, cell, minesObject, mode) => {\n    let row = cellsObject[cell].row;\n    let col = cellsObject[cell].col;\n    \n    let arroundCells = [\n      (col + 1) + '/' + (row),\n      (col - 1) + '/' + (row),\n      (col) + '/' + (row + 1),\n      (col) + '/' + (row - 1),\n      (col + 1) + '/' + (row + 1),\n      (col - 1) + '/' + (row - 1),\n      (col + 1) + '/' + (row - 1),\n      (col - 1) + '/' + (row + 1)\n    ];\n\n    let newMinesAround = 0;\n    let cellsAround = [];\n\n    arroundCells = arroundCells.forEach(item => {\n\n      let reg = new RegExp(\n        `^(0\\/)|(\\/0)|(${+this.props.gameDifficult.width + 1}\\/)|(\\/${+this.props.gameDifficult.height + 1})`,\n        'g'\n      );\n  \n      if (!item.match(reg)) {\n        if (mode === 'mines') {\n          newMinesAround = minesObject[item] ?  newMinesAround += 1 : newMinesAround;\n        } else {\n          cellsAround.push(item);\n        }\n      } else {\n        if (mode === 'mines') {\n          newMinesAround = newMinesAround;\n        } else {\n          return;\n        }\n      }\n    });\n   \n    if (mode === 'mines') {\n      return newMinesAround;\n    } else {\n      return cellsAround;\n    }\n  }\n\n  handleCheat = () => {\n    this.setState({\n      cheatOn: true\n    });\n  } \n\n  handleWonScore = (time) => {\n    this.setState({\n      score: time\n    });\n  }\n\n  restartGame = (event) => {\n    event.preventDefault();\n\n    this.props.handleGameStatus({}, false, {\n      width: this.props.gameDifficult.width,\n      height: this.props.gameDifficult.height\n    });\n  }\n\n  handlePause = (isPause) => {\n    this.setState({pause: isPause});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Board\n         gameState={this.state} \n         handleClick={this.handleClick} \n         gameOver={this.state.gameOver}\n         cheatOn={this.state.cheatOn}\n         gameWon={this.state.gameWon}\n         score={this.state.score}\n         pause={this.state.pause}\n        />\n\n        <AsideMenu\n         handleGameStatus={this.props.handleGameStatus} \n         gameOver={this.state.gameOver}\n         gameWon={this.state.gameWon}\n         gameInit={this.state.gameInit} \n         flags={this.state.flags}\n         handleCheat={this.handleCheat}\n         handleWonScore={this.handleWonScore}\n         score={this.state.score}\n         restartGame={this.restartGame}\n         handlePause={this.handlePause}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;","import React from 'react';\nimport StartMenu from './start-menu';\nimport Game from './game';\nimport './main.css';\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n  }\n\n  state = {\n    gameDifficult: {\n      width: '',\n      height: ''\n    },\n    isStartGame: false,\n    isRestart: null\n  }\n\n  handleGameStatus = (gameDifficultProps, init, restart) => {\n    this.setState({\n      gameDifficult: {\n        width: gameDifficultProps.width ? gameDifficultProps.width : '',\n        height: gameDifficultProps.height ? gameDifficultProps.height : ''\n      },\n      isStartGame: init === false ? init : true,\n      isRestart: restart ? restart : null\n    })\n  }\n\n  render() {\n\n    const gamePage =\n      this.state.isStartGame ?\n      (<Game\n        handleGameStatus={this.handleGameStatus}\n        gameDifficult={this.state.gameDifficult}\n      />) :\n      (<StartMenu\n        handleGameStatus={this.handleGameStatus}\n        isRestart={this.state.isRestart}\n      />);\n\n    return (\n      <div className=\"App\">\n          {gamePage}   \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}